name: Proofs
on: [pull_request]

jobs:
  proofs:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        proof-target:
          - proof/memory_safety.saw
          - proof/keygen.saw
          - proof/functional_proofs.saw
          - proof/correctness_add.saw
          - check
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - run: docker-compose pull
      - run: docker-compose build
      - run: docker-compose run blst ${{ matrix.proof-target }}
      - run: |
          sudo chown -R $USER:$(id -gn $USER) build
          jq -r '.[]' < <(cat build/*_output.json) | jq -s '.' | jq '. |= unique' > docs/output.json
      - uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
      # - name: "Post Summary on PR"
      #   uses: actions/github-script@v3
      #   if: github.event_name == 'pull_request'
      #   with:
      #     script: |
      #       const fs = require('fs'), d = `${process.env.GITHUB_WORKSPACE}/build`;
      #       const body = fs.readdirSync(d).filter(f => f.endsWith('_output')).map(f => fs.readFileSync(`${d}/${f}`).toString()).join();
      #       await github.issues.createComment({
      #         issue_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         body: body
      #       });
      #
      #       // Doesn't actually work yet
      #       const opts = github.issues.listComments.endpoints.merge({ owner, repo, issue_number });
      #       for await (const c of github.paginate.iterator(opts)) {
      #         console.log(JSON.stringify(c,null,2));
      #       }
