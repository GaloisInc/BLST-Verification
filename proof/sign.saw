/*
 * Copyright (c) 2020 Galois, Inc.
 * SPDX-License-Identifier: Apache-2.0 OR MIT
*/
///////////////////////////////////////////////////////////////////////////////
// Imports
///////////////////////////////////////////////////////////////////////////////

include "helpers.saw";
include "list_utils.saw";
include "types.saw";

m <- llvm_load_module "../build/llvm/libblst.a.bc";
let do_prove = true;
include "proof-helpers.saw";

include "x86.saw";
include "ec_opts.saw";

///////////////////////////////////////////////////////////////////////////////
// Specifications
///////////////////////////////////////////////////////////////////////////////

let blst_sign_pk_in_g2_spec = do {
  out_ptr <- crucible_alloc (llvm_struct "struct.POINTonE1");
  (_, msg_ptr) <- ptr_to_fresh_readonly "msg" (llvm_struct "struct.POINTonE1");
  (_, sk_ptr) <- ptr_to_fresh_readonly "SK" pow256_type;
  crucible_execute_func [out_ptr, msg_ptr, sk_ptr];
  new_out <- crucible_fresh_var "new_out" (llvm_struct "struct.POINTonE1");
  crucible_points_to out_ptr (crucible_term new_out);
};

let blst_sign_pk_in_g1_spec = do {
  out_ptr <- crucible_alloc (llvm_struct "struct.POINTonE2");
  (_, msg_ptr) <- ptr_to_fresh_readonly "msg" (llvm_struct "struct.POINTonE2");
  (_, sk_ptr) <- ptr_to_fresh_readonly "SK" pow256_type;
  crucible_execute_func [out_ptr, msg_ptr, sk_ptr];
  new_out <- crucible_fresh_var "new_out" (llvm_struct "struct.POINTonE2");
  crucible_points_to out_ptr (crucible_term new_out);
};

///////////////////////////////////////////////////////////////////////////////
// Proofs
///////////////////////////////////////////////////////////////////////////////

let overrides = concat ec_ops_overrides assembly_overrides;
sign_pk_in_g2_ov <- verify "blst_sign_pk_in_g2" overrides (blst_sign_pk_in_g2_spec);
sign_pk_in_g1_ov <- verify "blst_sign_pk_in_g1" overrides (blst_sign_pk_in_g1_spec);
