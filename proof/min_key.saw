/*
 * Copyright (c) 2021 Galois, Inc.
 * SPDX-License-Identifier: Apache-2.0 OR MIT
*/


/*
let do_prove = true;
include "proof-helpers.saw";
*/









// TODO: Is this proved somewhere?
uncompress_E1_uncompress_E1_OK_thm <- admit_cryptol (rewrite (cryptol_ss())
  {{ \x -> uncompress_E1 x ==
           if uncompress_E1_imp x != nothing
           then (True, uncompress_E1_OK x)
           else apply uncompress_E1 x }});

fold_normalize_affine_fp_thm <- prove_cryptol (rewrite (cryptol_ss())
  {{ \P -> (Fp.normalize P.0, Fp.normalize P.1) ==
           normalize_affine_point Fp P }}) [];





hoist_POINTonE1_affine_invariant <- prove_cryptol
  (rewrite (cryptol_ss())
    {{ \c p1 p2 -> POINTonE1_affine_invariant (if c then p1 else p2) ==
                   if c then POINTonE1_affine_invariant p1 else POINTonE1_affine_invariant p2 }})
  ["POINTonE1_affine_invariant"];

inteq_core <- parse_core "intEq";
















