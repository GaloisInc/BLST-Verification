/*
 * Copyright (c) 2020 Galois, Inc.
 * SPDX-License-Identifier: Apache-2.0 OR MIT
*/
///////////////////////////////////////////////////////////////////////////////
// Specifications
///////////////////////////////////////////////////////////////////////////////

let POINTonE1_384_dadd_spec = do {
  out_ptr <- crucible_alloc (llvm_struct "struct.POINTonE1");
  (_, p1_ptr) <- ptr_to_fresh_readonly "p1" (llvm_struct "struct.POINTonE1");
  (_, p2_ptr) <- ptr_to_fresh_readonly "p2" (llvm_struct "struct.POINTonE1");
  (_, a4_ptr) <- ptr_to_fresh_readonly "a4" vec384_type;
  crucible_execute_func [out_ptr, p1_ptr, p2_ptr, a4_ptr];
  new_POINTonE1_384_dadd_out <- crucible_fresh_var "new_POINTonE1_384_dadd_out" (llvm_struct "struct.POINTonE1");
  crucible_points_to out_ptr (crucible_term new_POINTonE1_384_dadd_out);
};

let POINTonE1_384_dadd_alias_spec = do {
  (_, out_ptr) <- ptr_to_fresh "p1" (llvm_struct "struct.POINTonE1");
  (_, p2_ptr) <- ptr_to_fresh_readonly "p2" (llvm_struct "struct.POINTonE1");
  (_, a4_ptr) <- ptr_to_fresh_readonly "a4" vec384_type;
  crucible_execute_func [out_ptr, out_ptr, p2_ptr, a4_ptr];
  new_POINTonE1_384_dadd_out <- crucible_fresh_var "new_POINTonE1_384_dadd_out" (llvm_struct "struct.POINTonE1");
  crucible_points_to out_ptr (crucible_term new_POINTonE1_384_dadd_out);
};

let POINTonE2_384x_dadd_spec = do {
  out_ptr <- crucible_alloc (llvm_struct "struct.POINTonE2");
  (_, p1_ptr) <- ptr_to_fresh_readonly "p1" (llvm_struct "struct.POINTonE2");
  (_, p2_ptr) <- ptr_to_fresh_readonly "p2" (llvm_struct "struct.POINTonE2");
  (_, a4_ptr) <- ptr_to_fresh_readonly "a4" vec384x_type;
  crucible_execute_func [out_ptr, p1_ptr, p2_ptr, a4_ptr];
  new_POINTonE2_384x_dadd_out <- crucible_fresh_var "new_POINTonE2_384x_dadd_out" (llvm_struct "struct.POINTonE2");
  crucible_points_to out_ptr (crucible_term new_POINTonE2_384x_dadd_out);
};

let POINTonE2_384x_dadd_alias_spec = do {
  (_, out_ptr) <- ptr_to_fresh "out" (llvm_struct "struct.POINTonE2");
  (_, p2_ptr) <- ptr_to_fresh_readonly "p2" (llvm_struct "struct.POINTonE2");
  (_, a4_ptr) <- ptr_to_fresh_readonly "a4" vec384x_type;
  crucible_execute_func [out_ptr, out_ptr, p2_ptr, a4_ptr];
  new_POINTonE2_384x_dadd_out <- crucible_fresh_var "new_POINTonE2_384x_dadd_out" (llvm_struct "struct.POINTonE2");
  crucible_points_to out_ptr (crucible_term new_POINTonE2_384x_dadd_out);
};

let POINTonE1_384_dadd_affine_spec = do {
  out_ptr <- crucible_alloc (llvm_struct "struct.POINTonE1");
  (_, p1_ptr) <- ptr_to_fresh_readonly "p1" (llvm_struct "struct.POINTonE1");
  (_, p2_ptr) <- ptr_to_fresh_readonly "p2" (llvm_struct "struct.POINTonE1");
  crucible_execute_func [out_ptr, p1_ptr, p2_ptr];
  new_POINTonE1_384_dadd_affine_out <- crucible_fresh_var "new_POINTonE1_384_dadd_affine_out" (llvm_struct "struct.POINTonE1");
  crucible_points_to out_ptr (crucible_term new_POINTonE1_384_dadd_affine_out);
};

let POINTonE2_384x_dadd_affine_spec = do {
  out_ptr <- crucible_alloc (llvm_struct "struct.POINTonE2");
  (_, p1_ptr) <- ptr_to_fresh_readonly "p1" (llvm_struct "struct.POINTonE2");
  (_, p2_ptr) <- ptr_to_fresh_readonly "p2" (llvm_struct "struct.POINTonE2");
  crucible_execute_func [out_ptr, p1_ptr, p2_ptr];
  new_POINTonE2_384x_dadd_affine_out <- crucible_fresh_var "new_POINTonE2_384x_dadd_affine_out" (llvm_struct "struct.POINTonE2");
  crucible_points_to out_ptr (crucible_term new_POINTonE2_384x_dadd_affine_out);
};

let POINTonE1_add_spec = do {
  out_ptr <- crucible_alloc (llvm_struct "struct.POINTonE1");
  (_, p1_ptr) <- ptr_to_fresh_readonly "p1" (llvm_struct "struct.POINTonE1");
  (_, p2_ptr) <- ptr_to_fresh_readonly "p2" (llvm_struct "struct.POINTonE1");
  crucible_execute_func [out_ptr, p1_ptr, p2_ptr];
  new_POINTonE1_add_out <- crucible_fresh_var "new_POINTonE1_add_out" (llvm_struct "struct.POINTonE1");
  crucible_points_to out_ptr (crucible_term new_POINTonE1_add_out);
};

let POINTonE1_add_alias_spec = do {
  (_, out_ptr) <- ptr_to_fresh "out" (llvm_struct "struct.POINTonE1");
  (_, p2_ptr) <- ptr_to_fresh_readonly "p2" (llvm_struct "struct.POINTonE1");
  crucible_execute_func [out_ptr, out_ptr, p2_ptr];
  new_POINTonE1_add_alias_out <- crucible_fresh_var "new_POINTonE1_add_alias_out" (llvm_struct "struct.POINTonE1");
  crucible_points_to out_ptr (crucible_term new_POINTonE1_add_alias_out);
};

let POINTonE1_add_alias_1_3_spec = do {
  (_, out_ptr) <- ptr_to_fresh "out" (llvm_struct "struct.POINTonE1");
  (_, p1_ptr) <- ptr_to_fresh_readonly "p2" (llvm_struct "struct.POINTonE1");
  crucible_execute_func [out_ptr, p1_ptr, out_ptr];
  new_POINTonE1_add_alias_1_3_out <- crucible_fresh_var "new_POINTonE1_add_alias_1_3_out" (llvm_struct "struct.POINTonE1");
  crucible_points_to out_ptr (crucible_term new_POINTonE1_add_alias_1_3_out);
};

let POINTonE2_add_spec = do {
  out_ptr <- crucible_alloc (llvm_struct "struct.POINTonE2");
  (_, p1_ptr) <- ptr_to_fresh_readonly "p1" (llvm_struct "struct.POINTonE2");
  (_, p2_ptr) <- ptr_to_fresh_readonly "p2" (llvm_struct "struct.POINTonE2");
  crucible_execute_func [out_ptr, p1_ptr, p2_ptr];
  new_POINTonE2_add_out <- crucible_fresh_var "new_POINTonE2_add_out" (llvm_struct "struct.POINTonE2");
  crucible_points_to out_ptr (crucible_term new_POINTonE2_add_out);
};

let POINTonE2_add_alias_spec = do {
  (_, out_ptr) <- ptr_to_fresh "out" (llvm_struct "struct.POINTonE2");
  (_, p2_ptr) <- ptr_to_fresh_readonly "p2" (llvm_struct "struct.POINTonE2");
  crucible_execute_func [out_ptr, out_ptr, p2_ptr];
  new_POINTonE2_add_alias_out <- crucible_fresh_var "new_POINTonE2_add_alias_out" (llvm_struct "struct.POINTonE2");
  crucible_points_to out_ptr (crucible_term new_POINTonE2_add_alias_out);
};


let POINTonE1_add_affine_spec = do {
  p3_ptr <- crucible_alloc (llvm_struct "struct.POINTonE1");
  (_, p1_ptr) <- ptr_to_fresh_readonly "p1" (llvm_struct "struct.POINTonE1");
  (_, p2_ptr) <- ptr_to_fresh_readonly "p2" (llvm_struct "struct.POINTonE1_affine");
  crucible_execute_func [p3_ptr, p1_ptr, p2_ptr];
  new_POINTonE1_add_affine_p3 <- crucible_fresh_var "new_POINTonE1_add_affine_p3" (llvm_struct "struct.POINTonE1");
  crucible_points_to p3_ptr (crucible_term new_POINTonE1_add_affine_p3);
};

let POINTonE1_add_affine_alias_spec = do {
  (_, p3_ptr) <- ptr_to_fresh "p3" (llvm_struct "struct.POINTonE1");
  (_, p2_ptr) <- ptr_to_fresh_readonly "p2" (llvm_struct "struct.POINTonE1_affine");
  crucible_execute_func [p3_ptr, p3_ptr, p2_ptr];
  new_POINTonE1_add_affine_alias_p3 <- crucible_fresh_var "new_POINTonE1_add_affine_alias_p3" (llvm_struct "struct.POINTonE1");
  crucible_points_to p3_ptr (crucible_term new_POINTonE1_add_affine_alias_p3);
};

let POINTonE2_add_affine_spec = do {
  p3_ptr <- crucible_alloc (llvm_struct "struct.POINTonE2");
  (_, p1_ptr) <- ptr_to_fresh_readonly "p1" (llvm_struct "struct.POINTonE2");
  (_, p2_ptr) <- ptr_to_fresh_readonly "p2" (llvm_struct "struct.POINTonE2_affine");
  crucible_execute_func [p3_ptr, p1_ptr, p2_ptr];
  new_POINTonE2_add_affine_p3 <- crucible_fresh_var "new_POINTonE2_add_affine_p3" (llvm_struct "struct.POINTonE2");
  crucible_points_to p3_ptr (crucible_term new_POINTonE2_add_affine_p3);
};

let POINTonE2_add_affine_alias_spec = do {
  (_, p3_ptr) <- ptr_to_fresh "p3" (llvm_struct "struct.POINTonE2");
  (_, p2_ptr) <- ptr_to_fresh_readonly "p2" (llvm_struct "struct.POINTonE2_affine");
  crucible_execute_func [p3_ptr, p3_ptr, p2_ptr];
  new_POINTonE2_add_affine_alias_p3 <- crucible_fresh_var "new_POINTonE2_add_affine_alias_p3" (llvm_struct "struct.POINTonE2");
  crucible_points_to p3_ptr (crucible_term new_POINTonE2_add_affine_alias_p3);
};

let POINTonE1_double_spec = do {
  p3_ptr <- crucible_alloc (llvm_struct "struct.POINTonE1");
  (_, p1_ptr) <- ptr_to_fresh_readonly "p1" (llvm_struct "struct.POINTonE1");
  crucible_execute_func [p3_ptr, p1_ptr];
  new_POINTonE1_double_p3 <- crucible_fresh_var "new_POINTonE1_double_p3" (llvm_struct "struct.POINTonE1");
  crucible_points_to p3_ptr (crucible_term new_POINTonE1_double_p3);
};

let POINTonE1_double_alias_spec = do {
  (_, p3_ptr) <- ptr_to_fresh "p3" (llvm_struct "struct.POINTonE1");
  crucible_execute_func [p3_ptr, p3_ptr];
  new_POINTonE1_double_alias_p3 <- crucible_fresh_var "new_POINTonE1_double_alias_p3" (llvm_struct "struct.POINTonE1");
  crucible_points_to p3_ptr (crucible_term new_POINTonE1_double_alias_p3);
};

let POINTonE2_double_spec = do {
  p3_ptr <- crucible_alloc (llvm_struct "struct.POINTonE2");
  (_, p1_ptr) <- ptr_to_fresh_readonly "p1" (llvm_struct "struct.POINTonE2");
  crucible_execute_func [p3_ptr, p1_ptr];
  new_POINTonE2_double_p3 <- crucible_fresh_var "new_POINTonE2_double_p3" (llvm_struct "struct.POINTonE2");
  crucible_points_to p3_ptr (crucible_term new_POINTonE2_double_p3);
};

let POINTonE2_double_alias_spec = do {
  (_, p3_ptr) <- ptr_to_fresh "p3" (llvm_struct "struct.POINTonE2");
  crucible_execute_func [p3_ptr, p3_ptr];
  new_POINTonE2_double_alias_p3 <- crucible_fresh_var "new_POINTonE2_double_alias_p3" (llvm_struct "struct.POINTonE2");
  crucible_points_to p3_ptr (crucible_term new_POINTonE2_double_alias_p3);
};

let POINTonE1_is_equal_spec = do {
  (_, p1_ptr) <- ptr_to_fresh_readonly "p1" (llvm_struct "struct.POINTonE2");
  (_, p2_ptr) <- ptr_to_fresh_readonly "p2" (llvm_struct "struct.POINTonE2");
  crucible_execute_func [p1_ptr, p2_ptr];
  ret <- crucible_fresh_var "ret" limb_type;
  crucible_return (crucible_term ret);
};

let POINTonE2_is_equal_spec = do {
  (_, p1_ptr) <- ptr_to_fresh_readonly "p1" (llvm_struct "struct.POINTonE2");
  (_, p2_ptr) <- ptr_to_fresh_readonly "p2" (llvm_struct "struct.POINTonE2");
  crucible_execute_func [p1_ptr, p2_ptr];
  ret <- crucible_fresh_var "ret" limb_type;
  crucible_return (crucible_term ret);
};

let POINTonE1_mult_w5_spec nbits = do {
  out_ptr <- crucible_alloc (llvm_struct "struct.POINTonE1");
  (_, point_ptr) <- ptr_to_fresh_readonly "point" (llvm_struct "struct.POINTonE1");
  (_, scalar_ptr) <- ptr_to_fresh_readonly "scalar" (llvm_array (eval_size {| nbits /^ 8 |}) (llvm_int 8));
  crucible_execute_func [out_ptr, point_ptr, scalar_ptr, crucible_term {{`nbits:[64]}}];
  new_out <- crucible_fresh_var "new_POINTonE1_mult_w5_out" (llvm_struct "struct.POINTonE1");
  crucible_points_to out_ptr (crucible_term new_out);
};

let POINTonE2_mult_w5_spec nbits = do {
  out_ptr <- crucible_alloc (llvm_struct "struct.POINTonE2");
  (_, point_ptr) <- ptr_to_fresh_readonly "point" (llvm_struct "struct.POINTonE2");
  (_, scalar_ptr) <- ptr_to_fresh_readonly "scalar" (llvm_array (eval_size {| nbits /^ 8 |}) (llvm_int 8));
  crucible_execute_func [out_ptr, point_ptr, scalar_ptr, crucible_term {{`nbits:[64]}}];
  new_out <- crucible_fresh_var "new_POINTonE2_mult_w5_out" (llvm_struct "struct.POINTonE2");
  crucible_points_to out_ptr (crucible_term new_out);
};
///////////////////////////////////////////////////////////////////////////////
// Proofs
///////////////////////////////////////////////////////////////////////////////

POINTonE1_384_dadd_ov <- verify "POINTonE1_dadd" assembly_overrides POINTonE1_384_dadd_spec;
POINTonE1_384_dadd_alias_ov <- verify "POINTonE1_dadd" assembly_overrides POINTonE1_384_dadd_alias_spec;
POINTonE2_384x_dadd_ov <- verify "POINTonE2_dadd" assembly_overrides POINTonE2_384x_dadd_spec;
POINTonE2_384x_dadd_alias_ov <- verify "POINTonE2_dadd" assembly_overrides POINTonE2_384x_dadd_alias_spec;
POINTonE1_384_dadd_affine_ov <- verify "POINTonE1_dadd_affine" assembly_overrides POINTonE1_384_dadd_affine_spec;
POINTonE2_384x_dadd_affine_ov <- verify "POINTonE2_dadd_affine" assembly_overrides POINTonE2_384x_dadd_affine_spec;
POINTonE1_add_ov <- verify "POINTonE1_add" assembly_overrides POINTonE1_add_spec;
POINTonE1_add_alias_ov <- verify "POINTonE1_add" assembly_overrides POINTonE1_add_alias_spec;
POINTonE1_add_alias_1_3_ov <- verify "POINTonE1_add" assembly_overrides POINTonE1_add_alias_1_3_spec;
POINTonE2_add_ov <- verify "POINTonE2_add" assembly_overrides POINTonE2_add_spec;
POINTonE2_add_alias_ov <- verify "POINTonE2_add" assembly_overrides POINTonE2_add_alias_spec;
POINTonE1_add_affine_ov <- verify "POINTonE1_add_affine" assembly_overrides POINTonE1_add_affine_spec;
POINTonE1_add_affine_alias_ov <- verify "POINTonE1_add_affine" assembly_overrides POINTonE1_add_affine_alias_spec;
POINTonE2_add_affine_ov <- verify "POINTonE2_add_affine" assembly_overrides POINTonE2_add_affine_spec;
POINTonE2_add_affine_alias_ov <- verify "POINTonE2_add_affine" assembly_overrides POINTonE2_add_affine_alias_spec;
POINTonE1_double_ov <- verify "POINTonE1_double" assembly_overrides POINTonE1_double_spec;
POINTonE1_double_alias_ov <- verify "POINTonE1_double" assembly_overrides POINTonE1_double_alias_spec;
POINTonE2_double_ov <- verify "POINTonE2_double" assembly_overrides POINTonE2_double_spec;
POINTonE2_double_alias_ov <- verify "POINTonE2_double" assembly_overrides POINTonE2_double_alias_spec;
POINTonE1_is_equal_ov <- verify "POINTonE1_is_equal" assembly_overrides POINTonE1_is_equal_spec;
POINTonE2_is_equal_ov <- verify "POINTonE2_is_equal" assembly_overrides POINTonE2_is_equal_spec;
POINTonE2_mult_w5_636_ov <- verify "POINTonE2_mult_w5" (concat [POINTonE2_double_alias_ov,POINTonE2_double_ov,POINTonE2_add_alias_ov, POINTonE2_add_ov] assembly_overrides) (POINTonE2_mult_w5_spec 636);
POINTonE2_mult_w5_255_ov <- verify "POINTonE2_mult_w5" (concat [POINTonE2_double_alias_ov,POINTonE2_double_ov,POINTonE2_add_alias_ov, POINTonE2_add_ov] assembly_overrides) (POINTonE2_mult_w5_spec 255);
POINTonE1_mult_w5_255_ov <- verify "POINTonE1_mult_w5" (concat [POINTonE1_double_ov, POINTonE1_double_alias_ov, POINTonE1_add_alias_ov, POINTonE1_add_ov] assembly_overrides) (POINTonE1_mult_w5_spec 255);

let ec_ops_overrides = [POINTonE1_is_equal_ov,POINTonE2_double_alias_ov,POINTonE2_double_ov,POINTonE1_double_alias_ov,POINTonE1_double_ov,POINTonE2_add_affine_alias_ov,POINTonE2_add_affine_ov,POINTonE1_add_affine_alias_ov,POINTonE1_add_affine_ov,POINTonE2_add_alias_ov,POINTonE2_add_ov,POINTonE1_add_ov,POINTonE1_add_alias_1_3_ov,POINTonE1_add_alias_ov,POINTonE2_384x_dadd_affine_ov,POINTonE1_384_dadd_affine_ov,POINTonE2_384x_dadd_alias_ov,POINTonE2_384x_dadd_ov,POINTonE1_384_dadd_alias_ov,POINTonE1_384_dadd_ov, POINTonE1_mult_w5_255_ov, POINTonE2_mult_w5_255_ov, POINTonE2_mult_w5_636_ov];
