/*
 * Copyright (c) 2020 Galois, Inc.
 * SPDX-License-Identifier: Apache-2.0 OR MIT
*/

enable_experimental;

m <- llvm_load_module "../build/llvm_bulk_addition/libblst.a.bc";

let do_prove=false;

include "helpers.saw";
include "list_utils.saw";
include "types.saw";

include "proof-helpers.saw";
include "cryptol_imports.saw";
include "vect.saw";
include "fp_overrides.saw";
include "fp2_overrides.saw";
include "curve_operations.saw";
include "curve_operations_e2.saw";
include "exp.saw";
// include "exp2.saw";

// first we do memory safety

// here we assume that the first pointer points to an array and the second is
// null.
let blst_p1s_add_spec_1 n = do {
  (sum, sum_ptr) <- ptr_to_fresh "sum" POINTonE1_type;
  // sum_ptr <- llvm_alloc POINTonE1_type;
  // llvm_points_to sum_ptr (llvm_term {{ POINTonE1_rep (projectify E (point_O E)) }});
  points_ptr <- llvm_alloc (llvm_array 2 (llvm_pointer POINTonE1_affine_type));
  (array, array_ptr) <- ptr_to_fresh "array" (llvm_array n POINTonE1_affine_type);
  llvm_points_to (llvm_elem points_ptr 0) array_ptr;
  llvm_points_to (llvm_elem points_ptr 1) llvm_null;
  llvm_precond {{ POINTonE1_invariant sum }};
  llvm_precond {{ all POINTonE1_affine_invariant array }};
  llvm_execute_func [sum_ptr, points_ptr, llvm_term {{`n:[64]}}];
};

let POINTonE1s_accumulate_16_spec = do { // TODO: can we do this generically for any n?
  (sum, sum_ptr) <- ptr_to_fresh "sum" POINTonE1_type;
  // points is an array of POINTonE1_type where the Z component of each point is
  // uninitialized
  points_ptr <- llvm_alloc (llvm_array 16 POINTonE1_type);
  point_1 <- llvm_fresh_var "point_1" POINTonE1_affine_type;
  point_2 <- llvm_fresh_var "point_2" POINTonE1_affine_type;
  point_3 <- llvm_fresh_var "point_3" POINTonE1_affine_type;
  point_4 <- llvm_fresh_var "point_4" POINTonE1_affine_type;
  point_5 <- llvm_fresh_var "point_5" POINTonE1_affine_type;
  point_6 <- llvm_fresh_var "point_6" POINTonE1_affine_type;
  point_7 <- llvm_fresh_var "point_7" POINTonE1_affine_type;
  point_8 <- llvm_fresh_var "point_8" POINTonE1_affine_type;
  point_9 <- llvm_fresh_var "point_9" POINTonE1_affine_type;
  point_10 <- llvm_fresh_var "point_10" POINTonE1_affine_type;
  point_11 <- llvm_fresh_var "point_11" POINTonE1_affine_type;
  point_12 <- llvm_fresh_var "point_12" POINTonE1_affine_type;
  point_13 <- llvm_fresh_var "point_13" POINTonE1_affine_type;
  point_14 <- llvm_fresh_var "point_14" POINTonE1_affine_type;
  point_15 <- llvm_fresh_var "point_15" POINTonE1_affine_type;
  point_16 <- llvm_fresh_var "point_16" POINTonE1_affine_type;
  llvm_points_to_untyped (llvm_elem points_ptr 0) (llvm_term point_1);
  llvm_points_to_untyped (llvm_elem points_ptr 1) (llvm_term point_2);
  llvm_points_to_untyped (llvm_elem points_ptr 2) (llvm_term point_3);
  llvm_points_to_untyped (llvm_elem points_ptr 3) (llvm_term point_4);
  llvm_points_to_untyped (llvm_elem points_ptr 4) (llvm_term point_5);
  llvm_points_to_untyped (llvm_elem points_ptr 5) (llvm_term point_6);
  llvm_points_to_untyped (llvm_elem points_ptr 6) (llvm_term point_7);
  llvm_points_to_untyped (llvm_elem points_ptr 7) (llvm_term point_8);
  llvm_points_to_untyped (llvm_elem points_ptr 8) (llvm_term point_9);
  llvm_points_to_untyped (llvm_elem points_ptr 9) (llvm_term point_10);
  llvm_points_to_untyped (llvm_elem points_ptr 10) (llvm_term point_11);
  llvm_points_to_untyped (llvm_elem points_ptr 11) (llvm_term point_12);
  llvm_points_to_untyped (llvm_elem points_ptr 12) (llvm_term point_13);
  llvm_points_to_untyped (llvm_elem points_ptr 13) (llvm_term point_14);
  llvm_points_to_untyped (llvm_elem points_ptr 14) (llvm_term point_15);
  llvm_points_to_untyped (llvm_elem points_ptr 15) (llvm_term point_16);
  llvm_precond {{ POINTonE1_invariant sum }};
  llvm_precond {{ POINTonE1_affine_invariant point_1 }};
  llvm_precond {{ POINTonE1_affine_invariant point_2 }};
  llvm_precond {{ POINTonE1_affine_invariant point_3 }};
  llvm_precond {{ POINTonE1_affine_invariant point_4 }};
  llvm_precond {{ POINTonE1_affine_invariant point_5 }};
  llvm_precond {{ POINTonE1_affine_invariant point_6 }};
  llvm_precond {{ POINTonE1_affine_invariant point_7 }};
  llvm_precond {{ POINTonE1_affine_invariant point_8 }};
  llvm_precond {{ POINTonE1_affine_invariant point_9 }};
  llvm_precond {{ POINTonE1_affine_invariant point_10 }};
  llvm_precond {{ POINTonE1_affine_invariant point_11 }};
  llvm_precond {{ POINTonE1_affine_invariant point_12 }};
  llvm_precond {{ POINTonE1_affine_invariant point_13 }};
  llvm_precond {{ POINTonE1_affine_invariant point_14 }};
  llvm_precond {{ POINTonE1_affine_invariant point_15 }};
  llvm_precond {{ POINTonE1_affine_invariant point_16 }};
  llvm_execute_func [sum_ptr, points_ptr, llvm_term {{ 16:[64] }}];
  new_sum <- llvm_fresh_var "new_POINTonE1_accumulate_sum" POINTonE1_type;
  llvm_postcond {{ POINTonE1_invariant new_sum }};
  llvm_points_to sum_ptr (llvm_term new_sum );
  new_points <- llvm_fresh_var "new_POINTonE1_accumulate_points" (llvm_array 16 POINTonE1_type);
  llvm_postcond {{ all POINTonE1_invariant new_points }};
  llvm_points_to points_ptr (llvm_term new_points);
};

let POINTonE1_head_spec = do {
  // TODO: is untyped necessary?
  AB_ptr <- llvm_alloc (llvm_array 2 POINTonE1_type);
  A <- llvm_fresh_var "A" POINTonE1_affine_type;
  B <- llvm_fresh_var "B" POINTonE1_affine_type;
  llvm_points_to_untyped (llvm_elem AB_ptr 0) (llvm_term A);
  llvm_points_to_untyped (llvm_elem AB_ptr 1) (llvm_term B);
  (mul_acc, mul_acc_ptr) <- ptr_to_fresh "mul_acc" vec384_type;
  // mul_acc_ptr <- llvm_alloc vec384_type;
  // mul_acc <- llvm_fresh_var "mul_acc" vec384_type;
  // llvm_points_to_untyped mul_acc_ptr (llvm_term mul_acc);
  llvm_precond {{ POINTonE1_affine_invariant A }};
  llvm_precond {{ POINTonE1_affine_invariant B }};
  llvm_precond {{ fp_invariant mul_acc }};
  llvm_execute_func [AB_ptr, mul_acc_ptr];
  new_POINTonE1_head_AB <- llvm_fresh_var "new_POINTonE1_head_AB" (llvm_array 2 POINTonE1_type);
  llvm_postcond {{ all POINTonE1_invariant new_POINTonE1_head_AB }};
  llvm_points_to_untyped AB_ptr (llvm_term new_POINTonE1_head_AB);
  new_POINTonE1_head_mul_acc <- llvm_fresh_var "new_POINTonE1_head_mul_acc" vec384_type;
  llvm_postcond {{ fp_invariant new_POINTonE1_head_mul_acc }};
  llvm_points_to_untyped mul_acc_ptr (llvm_term new_POINTonE1_head_mul_acc);
};

let POINTonE1_head_null_spec = do {
  // (AB, AB_ptr) <- ptr_to_fresh "AB" (llvm_array 2 POINTonE1_type);
  AB_ptr <- llvm_alloc (llvm_array 2 POINTonE1_type);
  A <- llvm_fresh_var "A" POINTonE1_affine_type;
  B <- llvm_fresh_var "B" POINTonE1_affine_type;
  llvm_points_to_untyped (llvm_elem AB_ptr 0) (llvm_term A);
  llvm_points_to_untyped (llvm_elem AB_ptr 1) (llvm_term B);
  llvm_precond {{ POINTonE1_affine_invariant A }};
  llvm_precond {{ POINTonE1_affine_invariant B }};
  llvm_execute_func [AB_ptr, llvm_null];
  new_POINTonE1_head_null_AB <- llvm_fresh_var "new_POINTonE1_head_null_AB" (llvm_array 2 POINTonE1_type);
  llvm_postcond {{ all POINTonE1_invariant new_POINTonE1_head_null_AB }};
  llvm_points_to_untyped AB_ptr (llvm_term new_POINTonE1_head_null_AB);
};

let POINTonE1_tail_spec = do {
  (D, D_ptr) <- ptr_to_fresh "D" POINTonE1_type;
  (AB, AB_ptr) <- ptr_to_fresh "AB" (llvm_array 2 POINTonE1_type);
  (lambda, lambda_ptr) <- ptr_to_fresh "lambda" vec384_type;
  llvm_precond {{ POINTonE1_invariant D }};
  llvm_precond {{ all POINTonE1_invariant AB }};
  llvm_precond {{ fp_invariant lambda }};
  llvm_execute_func [D_ptr, AB_ptr, lambda_ptr];
  new_POINTonE1_tail_AB <- llvm_fresh_var "new_POINTonE1_tail_AB" (llvm_array 2 POINTonE1_type);
  llvm_postcond {{ all POINTonE1_invariant new_POINTonE1_tail_AB }};
  llvm_points_to_untyped AB_ptr (llvm_term new_POINTonE1_tail_AB);
  new_POINTonE1_tail_D <- llvm_fresh_var "new_POINTonE1_tail_D" POINTonE1_type;
  llvm_postcond {{ POINTonE1_invariant new_POINTonE1_tail_D }};
  llvm_points_to_untyped D_ptr (llvm_term new_POINTonE1_tail_D);
  new_POINTonE1_tail_lambda <- llvm_fresh_var "new_POINTonE1_tail_lambda" vec384_type;
  llvm_postcond {{ fp_invariant new_POINTonE1_tail_lambda }};
  llvm_points_to_untyped lambda_ptr (llvm_term new_POINTonE1_tail_lambda);
};

let POINTonE1_tail_spec_2 = do {
  (AB, AB_ptr) <- ptr_to_fresh "AB" (llvm_array 2 POINTonE1_type);
  (lambda, lambda_ptr) <- ptr_to_fresh "lambda" vec384_type;
  llvm_precond {{ all POINTonE1_invariant AB }};
  llvm_precond {{ fp_invariant lambda }};
  llvm_execute_func [llvm_elem AB_ptr 1, AB_ptr, lambda_ptr];
  new_POINTonE1_tail_AB <- llvm_fresh_var "new_POINTonE1_tail_AB" (llvm_array 2 POINTonE1_type);
  llvm_postcond {{ all POINTonE1_invariant new_POINTonE1_tail_AB }};
  llvm_points_to_untyped AB_ptr (llvm_term new_POINTonE1_tail_AB);
  new_POINTonE1_tail_lambda <- llvm_fresh_var "new_POINTonE1_tail_lambda" vec384_type;
  llvm_postcond {{ fp_invariant new_POINTonE1_tail_lambda }};
  llvm_points_to_untyped lambda_ptr (llvm_term new_POINTonE1_tail_lambda);
};

let POINTonE1_tail_spec_3 = do {
  (D, D_ptr) <- ptr_to_fresh "D" POINTonE1_type;
  (AB, AB_ptr) <- ptr_to_fresh "AB" (llvm_array 2 POINTonE1_type);
  llvm_precond {{ POINTonE1_invariant D }};
  llvm_precond {{ all POINTonE1_invariant AB }};
  llvm_execute_func [D_ptr, AB_ptr, (llvm_elem (llvm_elem AB_ptr 0) 2)];
  new_POINTonE1_tail_AB <- llvm_fresh_var "new_POINTonE1_tail_AB" (llvm_array 2 POINTonE1_type);
  llvm_postcond {{ all POINTonE1_invariant new_POINTonE1_tail_AB }};
  llvm_points_to_untyped AB_ptr (llvm_term new_POINTonE1_tail_AB);
  new_POINTonE1_tail_D <- llvm_fresh_var "new_POINTonE1_tail_D" POINTonE1_type;
  llvm_postcond {{ POINTonE1_invariant new_POINTonE1_tail_D }};
  llvm_points_to_untyped D_ptr (llvm_term new_POINTonE1_tail_D);
};

let blst_p2s_add_spec_1 n = do {
  (sum, sum_ptr) <- ptr_to_fresh "sum" POINTonE2_type;
  points_ptr <- llvm_alloc (llvm_array 2 (llvm_pointer POINTonE2_affine_type));
  (array, array_ptr) <- ptr_to_fresh "array" (llvm_array n POINTonE2_affine_type);
  llvm_points_to (llvm_elem points_ptr 0) array_ptr;
  llvm_points_to (llvm_elem points_ptr 1) llvm_null;
  llvm_precond {{ POINTonE2_invariant sum }};
  llvm_precond {{ all POINTonE2_affine_invariant array }};
  llvm_execute_func [sum_ptr, points_ptr, llvm_term {{`n:[64]}}];
};

let blst_p1s_add_spec_2 n = do {
  (sum, sum_ptr) <- ptr_to_fresh "sum" POINTonE1_type;
  points_ptr <- llvm_alloc (llvm_array n (llvm_pointer POINTonE1_affine_type));
  llvm_points_to (llvm_elem points_ptr n) llvm_null;
  llvm_precond {{ POINTonE1_invariant sum }};
  llvm_precond {{ POINTonE1_affine_invariant p1 }};
  llvm_precond {{ POINTonE1_affine_invariant p2 }};
  llvm_execute_func [sum_ptr, points_ptr, llvm_term {{`2:[64]}}];
};

// we use the following additional overrides:

let vec_zero_spec n = do {
  p_ptr <- llvm_alloc (llvm_array n (llvm_int 8));
  llvm_execute_func [p_ptr, llvm_term {{ (`n):Size_t }} ];
  llvm_points_to p_ptr (llvm_term {{ zero:[n][8] }});
};

vec_zero_144_ov <- admit "vec_zero" (vec_zero_spec 144);
vec_zero_288_ov <- admit "vec_zero" (vec_zero_spec 288);

// now the memory safety proofs:

let do_prove=true;

// trivial case:
_ <- verify "blst_p1s_add" (concat_all [fp_overrides, vec_overrides, [reciprocal_fp_ov, POINTonE1_dadd_affine_alias_ov, vec_zero_144_ov, reciprocal_fp_alias_ov]]) (blst_p1s_add_spec_1 4);

// POINTonE1_head_ov <- admit "POINTonE1_head" POINTonE1_head_spec;

POINTonE1_head_ov <- custom_verify "POINTonE1_head" (concat_all [fp_overrides, vec_overrides, [mul_by_3_fp_alias_1_2_ov, reciprocal_fp_ov, POINTonE1_dadd_affine_alias_ov, vec_zero_144_ov, reciprocal_fp_alias_ov]]) POINTonE1_head_spec
do {
  unfolding ["select"];
  goal_eval_unint fp_unints;
  simplify fp_simpset;
  w4;
};

POINTonE1_head_null_ov <- custom_verify "POINTonE1_head" (concat_all [fp_overrides, vec_overrides, [mul_by_3_fp_alias_1_2_ov, reciprocal_fp_ov, POINTonE1_dadd_affine_alias_ov, vec_zero_144_ov, reciprocal_fp_alias_ov]]) POINTonE1_head_null_spec
do {
  unfolding ["select"];
  goal_eval_unint fp_unints;
  simplify fp_simpset;
  w4;
  // w4_unint_z3 fp_unints;
};

POINTonE1_tail_ov <- custom_verify "POINTonE1_tail" (concat_all [fp_overrides, vec_overrides, [mul_by_3_fp_alias_1_2_ov, reciprocal_fp_ov, POINTonE1_dadd_affine_alias_ov, vec_zero_144_ov, reciprocal_fp_alias_ov]]) POINTonE1_tail_spec
do {
  unfolding ["select"];
  goal_eval_unint fp_unints;
  simplify fp_simpset;
  w4;
};

POINTonE1_tail_ov_2 <- custom_verify "POINTonE1_tail" (concat_all [fp_overrides, vec_overrides, [mul_by_3_fp_alias_1_2_ov, reciprocal_fp_ov, POINTonE1_dadd_affine_alias_ov, vec_zero_144_ov, reciprocal_fp_alias_ov]]) POINTonE1_tail_spec_2
do {
  unfolding ["select","POINTonE1_invariant"];
  goal_eval_unint fp_unints;
  simplify fp_simpset;
  w4;
};

POINTonE1_tail_ov_3 <- custom_verify "POINTonE1_tail" (concat_all [fp_overrides, vec_overrides, [mul_by_3_fp_alias_1_2_ov, reciprocal_fp_ov, POINTonE1_dadd_affine_alias_ov, vec_zero_144_ov, reciprocal_fp_alias_ov]]) POINTonE1_tail_spec_3
do {
  unfolding ["select","POINTonE1_invariant"];
  goal_eval_unint fp_unints;
  simplify fp_simpset;
  w4;
};

POINTonE1s_accumulate_16_ov <- custom_verify "POINTonE1s_accumulate" (concat_all [fp_overrides, vec_overrides, [POINTonE1_head_ov, POINTonE1_head_null_ov, POINTonE1_tail_ov, POINTonE1_tail_ov_2, POINTonE1_tail_ov_3, reciprocal_fp_ov, POINTonE1_dadd_affine_alias_ov, vec_zero_144_ov, reciprocal_fp_alias_ov]]) POINTonE1s_accumulate_16_spec
do {
  unfolding ["select","POINTonE1_affine_invariant","POINTonE1_invariant"];
  print_goal;
  goal_eval_unint fp_unints;
  simplify fp_simpset;
  w4;
};

_ <- custom_verify "blst_p1s_add" (concat_all [vec_overrides, [POINTonE1s_accumulate_16_ov, vec_zero_144_ov]]) (blst_p1s_add_spec_1 16)
do {
  unfolding ["select","POINTonE1_affine_invariant","POINTonE1_invariant"];
  print_goal;
  goal_eval_unint fp_unints;
  simplify fp_simpset;
  w4;
};
