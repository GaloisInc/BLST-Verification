/*
 * Copyright (c) 2021 Galois, Inc.
 * SPDX-License-Identifier: Apache-2.0 OR MIT
*/

module HashToCurveE2Aux where

import Parameters (t_Fp_2, to_Fp, E')
import ShortWeierstrassCurve (AffinePoint, double, sub, neg, scalar_mult, add)
import G2SubGroupCheck

clear_cofactor_E2_with_psi: AffinePoint t_Fp_2 -> AffinePoint t_Fp_2
clear_cofactor_E2_with_psi = undefined

// NOTE: we write an fp2 element a+b*I in big-endian, i.e. as [b,a]
to_Fp2: ([384], [384]) -> t_Fp_2
to_Fp2 (a,b) = [to_Fp b, to_Fp a] // a+b*I

k1s = map to_Fp2 // k1s@i is "k_(1,i)" from the spec
  [
    ( 0x05c759507e8e333ebb5b7a9a47d7ed8532c52d39fd3a042a88b58423c50ae15d5c2638e343d9c71c6238aaaaaaaa97d6
    , 0x05c759507e8e333ebb5b7a9a47d7ed8532c52d39fd3a042a88b58423c50ae15d5c2638e343d9c71c6238aaaaaaaa97d6 )
  , ( zero
    , 0x11560bf17baa99bc32126fced787c88f984f87adf7ae0c7f9a208c6b4f20a4181472aaa9cb8d555526a9ffffffffc71a )
  , ( 0x11560bf17baa99bc32126fced787c88f984f87adf7ae0c7f9a208c6b4f20a4181472aaa9cb8d555526a9ffffffffc71e
    , 0x08ab05f8bdd54cde190937e76bc3e447cc27c3d6fbd7063fcd104635a790520c0a395554e5c6aaaa9354ffffffffe38d )
  , ( 0x171d6541fa38ccfaed6dea691f5fb614cb14b4e7f4e810aa22d6108f142b85757098e38d0f671c7188e2aaaaaaaa5ed1
    , zero )
 ]

k2s = map to_Fp2
  [
    ( zero
    , 0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaa63)
  , ( zext 0xc
    , 0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaa9f)
 ]

k3s = map to_Fp2
  [
    ( 0x1530477c7ab4113b59a4c18b076d11930f7da5d4a07f649bf54439d87d27e500fc8c25ebf8c92f6812cfc71c71c6d706
    , 0x1530477c7ab4113b59a4c18b076d11930f7da5d4a07f649bf54439d87d27e500fc8c25ebf8c92f6812cfc71c71c6d706)
  , ( zero
    , 0x05c759507e8e333ebb5b7a9a47d7ed8532c52d39fd3a042a88b58423c50ae15d5c2638e343d9c71c6238aaaaaaaa97be)
  ,
    ( 0x11560bf17baa99bc32126fced787c88f984f87adf7ae0c7f9a208c6b4f20a4181472aaa9cb8d555526a9ffffffffc71c
    , 0x08ab05f8bdd54cde190937e76bc3e447cc27c3d6fbd7063fcd104635a790520c0a395554e5c6aaaa9354ffffffffe38f)
  ,
    ( 0x124c9ad43b6cf79bfbf7043de3811ad0761b0f37a1e26286b0e977c69aa274524e79097a56dc4bd9e1b371c71c718b10
    , zero)
 ]

k4s = map to_Fp2
  [
    ( 0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffa8fb
    , 0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffa8fb)
  , ( zero
    , 0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffa9d3)
  ,
    ( zext 0x12
    , 0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaa99)
 ]

// C1 as a positive value
pos_c1 = toInteger 0xd201000000010000

psi_psi_double : AffinePoint t_Fp_2 -> AffinePoint t_Fp_2
psi_psi_double P = psi (psi (double E' P))

// https://tools.ietf.org/html/draft-irtf-cfrg-hash-to-curve-10#appendix-G.4
clear_cofactor_bls12381_g2 : AffinePoint t_Fp_2 -> AffinePoint t_Fp_2
clear_cofactor_bls12381_g2 P = sub E' t3' P where
  t1  = neg E' (scalar_mult E' pos_c1 P)
  t2  = psi P
  t3  = sub E' (psi_psi_double P) t2
  t2' = neg E' (scalar_mult E' pos_c1 (add E' t1 t2))
  t3' = sub E' (add E' t3 t2') t1
