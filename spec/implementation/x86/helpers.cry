module implementation::x86::helpers where

import implementation::Types

// Instruction definitions
bsr : [64] -> [64]
bsr x = sum shifts
  where
    shifts : [63][64]
    shifts = [if (x >> n) == 0 then 0 else 1 | n <- [1..63]]

mulx : [64] -> [64] -> ([64], [64])
mulx x y = splitAt (zext x * zext y)

mul : [64] -> [64] -> ([64], [64])
mul = mulx

imul : [64] -> [64] -> [64]
imul x y = drop`{64} (sext x * sext y)

imul1 : [64] -> [64] -> ([64], [64])
imul1 x y = splitAt (sext x * sext y)

adcx : [64] -> [64] -> Bit -> (Bit, [64])
adcx x y c = (overflows, x + (y + if c then 1 else 0))
  where
    total : [65]
    total = (zext x + zext y) + if c then 1 else 0
    overflows = total <$ 0

adox : [64] -> [64] -> Bit -> (Bit, [64])
adox = adcx

adc : [64] -> [64] -> Bit -> (Bit, [64])
adc = adcx

add : [64] -> [64] -> (Bit, [64])
add x y = adc x y False

sub : [64] -> [64] -> (Bit, [64])
sub x y = (overflows, x - y)
  where
    overflows = x < y

sbb : [64] -> [64] -> Bit -> (Bit, [64])
sbb x y c = (overflows, x - (y + if c then 1 else 0))
  where
    total : [65]
    total = zext y + zext (if c then 1 else 0 : [64])
    overflows = (total <$ 0) || (x < (y + if c then 1 else 0))

cmovb : [64] -> [64] -> Bit -> [64]
cmovb old new c = if c then new else old

cmove : [64] -> [64] -> Bit -> [64]
cmove = cmovb

cmovae : [64] -> [64] -> Bit -> [64]
cmovae old new c = if c then old else new

cmovne : [64] -> [64] -> Bit -> [64]
cmovne = cmovae

sar : {n} (fin n, 64 >= n, n >= 8) => [64] -> [n] -> [64]
sar x count = if count && 63 == 0 then x else x >>$ countmod
  where
    countmod : [64]
    countmod = zext (count && 63)

shr : {n} (fin n, 64 >= n, n >= 8) => [64] -> [n] -> [64]
shr x count = if count && 63 == 0 then x else x >> countmod
  where
    countmod : [64]
    countmod = zext (count && 63)

shr_nocheck : {n} (fin n, 64 >= n, n >= 8) => [64] -> [n] -> [64]
shr_nocheck x count = x >> countmod
  where
    countmod : [64]
    countmod = zext (count && 63)

shl : {n} (fin n, 64 >= n, n >= 8) => [64] -> [n] -> [64]
shl x count = if count && 63 == 0 then x else x << countmod
  where
    countmod : [64]
    countmod = zext (count && 63)

shl_nocheck : {n} (fin n, 64 >= n, n >= 8) => [64] -> [n] -> [64]
shl_nocheck x count = x << countmod
  where
    countmod : [64]
    countmod = zext (count && 63)

shld : {n} (fin n, 64 >= n, n >= 8) => [64] -> [64] -> [n] -> [64]
shld x shiftin count = if count && 63 == 0 then x else take ((x # shiftin) << countmod)
  where
    countmod : [128]
    countmod = zext (count && 63)

shrd : {n} (fin n, 64 >= n, n >= 8) => [64] -> [64] -> [n] -> [64]
shrd x shiftin count = if count && 63 == 0 then x else drop ((shiftin # x) >> countmod)
  where
    countmod : [128]
    countmod = zext (count && 63)

shrd_ret : {n} (fin n, 64 >= n, n >= 8) => [64] -> [64] -> [64] -> [n] -> [64]
shrd_ret ret x shiftin count = if count && 63 == 0 then ret else drop ((shiftin # x) >> countmod)
  where
    countmod : [128]
    countmod = zext (count && 63)

// Helper routines
__sub_mod_384x384
  : Vec768 // a; pointer in rsi
  -> Vec768 // b; pointer in rdx
  -> Vec384 // n; pointer in rcx
  -> Vec768 // result; pointer in rdi
__sub_mod_384x384 a b n = result
  where
    [r8_0, r9_0, r10_0, r11_0, r12_0, r13_0, r14_0] = take a
    (cf_1, r8_1) = sub r8_0 (b @ 0)
    r15_2 = a @ 7
    (cf_3, r9_3) = sbb r9_0 (b @ 1) cf_1
    rax_4 = a @ 8
    (cf_5, r10_5) = sbb r10_0 (b @ 2) cf_3
    rbx_6 = a @ 9
    (cf_7, r11_7) = sbb r11_0 (b @ 3) cf_5
    rbp_8 = a @ 10
    (cf_9, r12_9) = sbb r12_0 (b @ 4) cf_7
    rsi_10 = a @ 11
    (cf_11, r13_11) = sbb r13_0 (b @ 5) cf_9
    result0 = r8_1
    (cf_13, r14_13) = sbb r14_0 (b @ 6) cf_11
    r8_14 = n @ 0
    result1 = r9_3
    (cf_16, r15_16) = sbb r15_2 (b @ 7) cf_13
    r9_17 = n @ 1
    result2 = r10_5
    (cf_19, rax_19) = sbb rax_4 (b @ 8) cf_16
    r10_20 = n @ 2
    result3 = r11_7
    (cf_22, rbx_22) = sbb rbx_6 (b @ 9) cf_19
    r11_23 = n @ 3
    result4 = r12_9
    (cf_25, rbp_25) = sbb rbp_8 (b @ 10) cf_22
    r12_26 = n @ 4
    result5 = r13_11
    (cf_28, rsi_28) = sbb rsi_10 (b @ 11) cf_25
    r13_29 = n @ 5
    rdx_30 = if cf_28 then -1 else 0
    r8_31 = r8_14 && rdx_30
    r9_32 = r9_17 && rdx_30
    r10_33 = r10_20 && rdx_30
    r11_34 = r11_23 && rdx_30
    r12_35 = r12_26 && rdx_30
    r13_36 = r13_29 && rdx_30
    (cf_37, r14_37) = add r14_13 r8_31
    (cf_38, r15_38) = adc r15_16 r9_32 cf_37
    result6 = r14_37
    (cf_40, rax_40) = adc rax_19 r10_33 cf_38
    result7 = r15_38
    (cf_42, rbx_42) = adc rbx_22 r11_34 cf_40
    result8 = rax_40
    (cf_44, rbp_44) = adc rbp_25 r12_35 cf_42
    result9 = rbx_42
    (cf_46, rsi_46) = adc rsi_28 r13_36 cf_44
    result10 = rbp_44
    result11 = rsi_46
    result = [result0, result1, result2, result3, result4, result5, result6, result7, result8, result9, result10, result11]

__add_mod_384
  : Vec384 // a
  -> Vec384 // b
  -> Vec384 // n
  -> Vec384 // result
__add_mod_384 a b n = result
  where
    (cf_0, tmp_0) = add (a @ 0) (b @ 0)
    (cf_1, tmp_1) = adc (a @ 1) (b @ 1) cf_0
    (cf_2, tmp_2) = adc (a @ 2) (b @ 2) cf_1
    (cf_3, tmp_3) = adc (a @ 3) (b @ 3) cf_2
    (cf_4, tmp_4) = adc (a @ 4) (b @ 4) cf_3
    (high, tmp_5) = adc (a @ 5) (b @ 5) cf_4
    (cf_6, tmp_6) = sub tmp_0 (n @ 0)
    (cf_7, tmp_7) = sbb tmp_1 (n @ 1) cf_6
    (cf_8, tmp_8) = sbb tmp_2 (n @ 2) cf_7
    (cf_9, tmp_9) = sbb tmp_3 (n @ 3) cf_8
    (cf_10, tmp_10) = sbb tmp_4 (n @ 4) cf_9
    (cf_11, tmp_11) = sbb tmp_5 (n @ 5) cf_10
    (gt, _) = sbb (if high then -1 else 0) 0 cf_11
    result0 = if gt then tmp_0 else tmp_6
    result1 = if gt then tmp_1 else tmp_7
    result2 = if gt then tmp_2 else tmp_8
    result3 = if gt then tmp_3 else tmp_9
    result4 = if gt then tmp_4 else tmp_10
    result5 = if gt then tmp_5 else tmp_11
    result = [result0, result1, result2, result3, result4, result5]

__sub_mod_384
  : Vec384 // a
  -> Vec384 // b
  -> Vec384 // n
  -> Vec384 // result
__sub_mod_384 a b n = result
  where
    (cf_0, tmp0) = sub (a @ 0) (b @ 0)
    (cf_1, tmp1) = sbb (a @ 1) (b @ 1) cf_0
    (cf_2, tmp2) = sbb (a @ 2) (b @ 2) cf_1
    (cf_3, tmp3) = sbb (a @ 3) (b @ 3) cf_2
    (cf_4, tmp4) = sbb (a @ 4) (b @ 4) cf_3
    (high, tmp5) = sbb (a @ 5) (b @ 5) cf_4
    mask = if high then -1 else 0
    n0 = mask && (n @ 0)
    n1 = mask && (n @ 1)
    n2 = mask && (n @ 2)
    n3 = mask && (n @ 3)
    n4 = mask && (n @ 4)
    n5 = mask && (n @ 5)
    (cf_6, result0) = add tmp0 n0
    (cf_7, result1) = adc tmp1 n1 cf_6
    (cf_8, result2) = adc tmp2 n2 cf_7
    (cf_9, result3) = adc tmp3 n3 cf_8
    (cf_10, result4) = adc tmp4 n4 cf_9
    (_, result5) = adc tmp5 n5 cf_10
    result = [result0, result1, result2, result3, result4, result5]

__redc_tail_mont_384
  : [8][64] // acc registers
  -> Vec768 // a; stored in rsi
  -> Vec384 // n; pointer in rbx
  -> Vec384 // result; stored in rdi
__redc_tail_mont_384 acc a n = result
  where
    [r8_0, r9_0, r10_0, r11_0, r12_0, r13_0, r14_0, r15_0] = acc
    (cf_1, r14_1) = add r14_0 (a @ 6)
    rax_2 = r14_1
    (cf_3, r15_3) = adc r15_0 (a @ 7) cf_1
    (cf_4, r8_4) = adc r8_0 (a @ 8) cf_3
    (cf_5, r9_5) = adc r9_0 (a @ 9) cf_4
    rcx_6 = r15_3
    (cf_7, r10_7) = adc r10_0 (a @ 10) cf_5
    (cf_8, r11_8) = adc r11_0 (a @ 11) cf_7
    r12_9 = if cf_8 then -1 else 0
    rdx_10 = r8_4
    rbp_11 = r9_5
    (cf_12, r14_12) = sub r14_1 (n @ 0)
    (cf_13, r15_13) = sbb r15_3 (n @ 1) cf_12
    r13_14 = r10_7
    (cf_15, r8_15) = sbb r8_4 (n @ 2) cf_13
    (cf_16, r9_16) = sbb r9_5 (n @ 3) cf_15
    (cf_17, r10_17) = sbb r10_7 (n @ 4) cf_16
    rsi_18 = r11_8
    (cf_19, r11_19) = sbb r11_8 (n @ 5) cf_17
    (cf_20, r12_20) = sbb r12_9 0 cf_19
    r14_21 = cmovb r14_12 rax_2 cf_20
    r15_22 = cmovb r15_13 rcx_6 cf_20
    r8_23 = cmovb r8_15 rdx_10 cf_20
    result0 = r14_21
    r9_25 = cmovb r9_16 rbp_11 cf_20
    result1 = r15_22
    r10_27 = cmovb r10_17 r13_14 cf_20
    result2 = r8_23
    r11_29 = cmovb r11_19 rsi_18 cf_20
    result3 = r9_25
    result4 = r10_27
    result5 = r11_29
    result = [result0, result1, result2, result3, result4, result5]

__mulx_384
 : Vec384 // a; pointer stored in rsi
 -> Vec384 // b; pointer stored in rbx
 -> Vec768 // result; stored in rdi?
__mulx_384 a b = [result0, result1, result2, result3, result4, result5] # resulthigh
  where
    rdx_0 = b @ 0
    r14_0 = a @ 0
    r15_0 = a @ 1
    r10_0 = a @ 2
    r11_0 = a @ 3
    r12_0 = a @ 4
    r13_0 = a @ 5
    (rcx_2, r9_2) = mulx r14_0 rdx_0
    rbp_3 = 0
    of_3 = False
    cf_3 = False
    (rax_4, r8_4) = mulx r15_0 rdx_0
    (cf_5, r8_5) = adcx r8_4 rcx_2 cf_3
    result0 = r9_2
    (rcx_7, r9_7) = mulx r10_0 rdx_0
    (cf_8, r9_8) = adcx r9_7 rax_4 cf_5
    (rax_9, r10_9) = mulx r11_0 rdx_0
    (cf_10, r10_10) = adcx r10_9 rcx_7 cf_8
    (rcx_11, r11_11) = mulx r12_0 rdx_0
    (cf_12, r11_12) = adcx r11_11 rax_9 cf_10
    (r13_13, r12_13) = mulx r13_0 rdx_0
    rdx_14 = b @ 1
    (cf_15, r12_15) = adcx r12_13 rcx_11 cf_12
    (cf_16, r13_16) = adcx r13_13 rbp_3 cf_15
    (rcx_17, rax_17) = mulx r14_0 rdx_14
    (cf_18, rax_18) = adcx rax_17 r8_5 cf_16
    (of_19, r9_19) = adox r9_8 rcx_17 of_3
    result1 = rax_18
    (rcx_21, r8_21) = mulx r15_0 rdx_14
    (cf_22, r8_22) = adcx r8_21 r9_19 cf_18
    (of_23, r10_23) = adox r10_10 rcx_21 of_19
    (rax_24, r9_24) = mulx (a @ 2) rdx_14
    (cf_25, r9_25) = adcx r9_24 r10_23 cf_22
    (of_26, r11_26) = adox r11_12 rax_24 of_23
    (rcx_27, r10_27) = mulx (a @ 3) rdx_14
    (cf_28, r10_28) = adcx r10_27 r11_26 cf_25
    (of_29, r12_29) = adox r12_15 rcx_27 of_26
    (rax_30, r11_30) = mulx (a @ 4) rdx_14
    (cf_31, r11_31) = adcx r11_30 r12_29 cf_28
    (of_32, rax_32) = adox rax_30 r13_16 of_29
    (r13_33, r12_33) = mulx (a @ 5) rdx_14
    rdx_34 = b @ 2
    (cf_35, r12_35) = adcx r12_33 rax_32 cf_31
    (of_36, r13_36) = adox r13_33 rbp_3 of_32
    (cf_37, r13_37) = adcx r13_36 rbp_3 cf_35
    (rcx_38, rax_38) = mulx r14_0 rdx_34
    (cf_39, rax_39) = adcx rax_38 r8_22 cf_37
    (of_40, r9_40) = adox r9_25 rcx_38 of_36
    result2 = rax_39
    (rcx_42, r8_42) = mulx r15_0 rdx_34
    (cf_43, r8_43) = adcx r8_42 r9_40 cf_39
    (of_44, r10_44) = adox r10_28 rcx_42 of_40
    (rax_45, r9_45) = mulx (a @ 2) rdx_34
    (cf_46, r9_46) = adcx r9_45 r10_44 cf_43
    (of_47, r11_47) = adox r11_31 rax_45 of_44
    (rcx_48, r10_48) = mulx (a @ 3) rdx_34
    (cf_49, r10_49) = adcx r10_48 r11_47 cf_46
    (of_50, r12_50) = adox r12_35 rcx_48 of_47
    (rax_51, r11_51) = mulx (a @ 4) rdx_34
    (cf_52, r11_52) = adcx r11_51 r12_50 cf_49
    (of_53, rax_53) = adox rax_51 r13_37 of_50
    (r13_54, r12_54) = mulx (a @ 5) rdx_34
    rdx_55 = b @ 3
    (cf_56, r12_56) = adcx r12_54 rax_53 cf_52
    (of_57, r13_57) = adox r13_54 rbp_3 of_53
    (cf_58, r13_58) = adcx r13_57 rbp_3 cf_56
    (rcx_59, rax_59) = mulx r14_0 rdx_55
    (cf_60, rax_60) = adcx rax_59 r8_43 cf_58
    (of_61, r9_61) = adox r9_46 rcx_59 of_57
    result3 = rax_60
    (rcx_63, r8_63) = mulx r15_0 rdx_55
    (cf_64, r8_64) = adcx r8_63 r9_61 cf_60
    (of_65, r10_65) = adox r10_49 rcx_63 of_61
    (rax_66, r9_66) = mulx (a @ 2) rdx_55
    (cf_67, r9_67) = adcx r9_66 r10_65 cf_64
    (of_68, r11_68) = adox r11_52 rax_66 of_65
    (rcx_69, r10_69) = mulx (a @ 3) rdx_55
    (cf_70, r10_70) = adcx r10_69 r11_68 cf_67
    (of_71, r12_71) = adox r12_56 rcx_69 of_68
    (rax_72, r11_72) = mulx (a @ 4) rdx_55
    (cf_73, r11_73) = adcx r11_72 r12_71 cf_70
    (of_74, rax_74) = adox rax_72 r13_58 of_71
    (r13_75, r12_75) = mulx (a @ 5) rdx_55
    rdx_76 = b @ 4
    (cf_77, r12_77) = adcx r12_75 rax_74 cf_73
    (of_78, r13_78) = adox r13_75 rbp_3 of_74
    (cf_79, r13_79) = adcx r13_78 rbp_3 cf_77
    (rcx_80, rax_80) = mulx r14_0 rdx_76
    (cf_81, rax_81) = adcx rax_80 r8_64 cf_79
    (of_82, r9_82) = adox r9_67 rcx_80 of_78
    result4 = rax_81
    (rcx_84, r8_84) = mulx r15_0 rdx_76
    (cf_85, r8_85) = adcx r8_84 r9_82 cf_81
    (of_86, r10_86) = adox r10_70 rcx_84 of_82
    (rax_87, r9_87) = mulx (a @ 2) rdx_76
    (cf_88, r9_88) = adcx r9_87 r10_86 cf_85
    (of_89, r11_89) = adox r11_73 rax_87 of_86
    (rcx_90, r10_90) = mulx (a @ 3) rdx_76
    (cf_91, r10_91) = adcx r10_90 r11_89 cf_88
    (of_92, r12_92) = adox r12_77 rcx_90 of_89
    (rax_93, r11_93) = mulx (a @ 4) rdx_76
    (cf_94, r11_94) = adcx r11_93 r12_92 cf_91
    (of_95, rax_95) = adox rax_93 r13_79 of_92
    (r13_96, r12_96) = mulx (a @ 5) rdx_76
    rdx_97 = b @ 5
    (cf_98, r12_98) = adcx r12_96 rax_95 cf_94
    (of_99, r13_99) = adox r13_96 rbp_3 of_95
    (cf_100, r13_100) = adcx r13_99 rbp_3 cf_98
    (rcx_101, rax_101) = mulx r14_0 rdx_97
    (cf_102, rax_102) = adcx rax_101 r8_85 cf_100
    (of_103, r9_103) = adox r9_88 rcx_101 of_99
    result5 = rax_102
    (rcx_105, r8_105) = mulx r15_0 rdx_97
    (cf_106, r8_106) = adcx r8_105 r9_103 cf_102
    (of_107, r10_107) = adox r10_91 rcx_105 of_103
    (rax_108, r9_108) = mulx (a @ 2) rdx_97
    (cf_109, r9_109) = adcx r9_108 r10_107 cf_106
    (of_110, r11_110) = adox r11_94 rax_108 of_107
    (rcx_111, r10_111) = mulx (a @ 3) rdx_97
    (cf_112, r10_112) = adcx r10_111 r11_110 cf_109
    (of_113, r12_113) = adox r12_98 rcx_111 of_110
    (rax_114, r11_114) = mulx (a @ 4) rdx_97
    (cf_115, r11_115) = adcx r11_114 r12_113 cf_112
    (of_116, rax_116) = adox rax_114 r13_100 of_113
    (r13_117, r12_117) = mulx (a @ 5) rdx_97
    rdx_118 = rax_116
    (cf_119, r12_119) = adcx r12_117 rax_116 cf_115
    (of_120, r13_120) = adox r13_117 rbp_3 of_116
    (cf_121, r13_121) = adcx r13_120 rbp_3 cf_119
    resulthigh = [r8_106, r9_109, r10_112, r11_115, r12_119, r13_121]

__mulx_by_1_mont_384
  : Vec384 // a; pointer stored in rsi
  -> Vec384 // b; pointer stored in rbx
  -> [64] // n0; stored in rcx
  -> [8][64] // result
__mulx_by_1_mont_384 a b n0 = result
  where
    rdx_0 = n0
    r8_0 = a @ 0
    r9_0 = a @ 1
    r10_0 = a @ 2
    r11_0 = a @ 3
    r12_0 = a @ 4
    r13_0 = a @ 5
    rdx_1 = imul rdx_0 r8_0
    r14_2 = 0
    of_2 = False
    cf_2 = False
    (rbp_3, rax_3) = mulx (b @ 0) rdx_1
    (cf_4, r8_4) = adcx r8_0 rax_3 cf_2
    (of_5, r9_5) = adox r9_0 rbp_3 of_2
    (rbp_6, rax_6) = mulx (b @ 1) rdx_1
    (cf_7, r9_7) = adcx r9_5 rax_6 cf_4
    (of_8, r10_8) = adox r10_0 rbp_6 of_5
    (rbp_9, rax_9) = mulx (b @ 2) rdx_1
    (cf_10, r10_10) = adcx r10_8 rax_9 cf_7
    (of_11, r11_11) = adox r11_0 rbp_9 of_8
    (rbp_12, rax_12) = mulx (b @ 3) rdx_1
    (cf_13, r11_13) = adcx r11_11 rax_12 cf_10
    (of_14, r12_14) = adox r12_0 rbp_12 of_11
    (rbp_15, rax_15) = mulx (b @ 4) rdx_1
    (cf_16, r12_16) = adcx r12_14 rax_15 cf_13
    (of_17, r13_17) = adox r13_0 rbp_15 of_14
    (rbp_18, rax_18) = mulx (b @ 5) rdx_1
    rdx_19 = n0
    (cf_20, r13_20) = adcx r13_17 rax_18 cf_16
    (of_21, rbp_21) = adox rbp_18 r14_2 of_17
    (cf_22, r14_22) = adcx r14_2 rbp_21 cf_20
    rdx_23 = imul rdx_19 r9_7
    r15_24 = 0
    of_24 = False
    cf_24 = False
    (rbp_25, rax_25) = mulx (b @ 0) rdx_23
    (cf_26, r9_26) = adcx r9_7 rax_25 cf_24
    (of_27, r10_27) = adox r10_10 rbp_25 of_24
    (rbp_28, rax_28) = mulx (b @ 1) rdx_23
    (cf_29, r10_29) = adcx r10_27 rax_28 cf_26
    (of_30, r11_30) = adox r11_13 rbp_28 of_27
    (rbp_31, rax_31) = mulx (b @ 2) rdx_23
    (cf_32, r11_32) = adcx r11_30 rax_31 cf_29
    (of_33, r12_33) = adox r12_16 rbp_31 of_30
    (rbp_34, rax_34) = mulx (b @ 3) rdx_23
    (cf_35, r12_35) = adcx r12_33 rax_34 cf_32
    (of_36, r13_36) = adox r13_20 rbp_34 of_33
    (rbp_37, rax_37) = mulx (b @ 4) rdx_23
    (cf_38, r13_38) = adcx r13_36 rax_37 cf_35
    (of_39, r14_39) = adox r14_22 rbp_37 of_36
    (rbp_40, rax_40) = mulx (b @ 5) rdx_23
    rdx_41 = n0
    (cf_42, r14_42) = adcx r14_39 rax_40 cf_38
    (of_43, rbp_43) = adox rbp_40 r15_24 of_39
    (cf_44, r15_44) = adcx r15_24 rbp_43 cf_42
    rdx_45 = imul rdx_41 r10_29
    r8_46 = 0
    of_46 = False
    cf_46 = False
    (rbp_47, rax_47) = mulx (b @ 0) rdx_45
    (cf_48, r10_48) = adcx r10_29 rax_47 cf_46
    (of_49, r11_49) = adox r11_32 rbp_47 of_46
    (rbp_50, rax_50) = mulx (b @ 1) rdx_45
    (cf_51, r11_51) = adcx r11_49 rax_50 cf_48
    (of_52, r12_52) = adox r12_35 rbp_50 of_49
    (rbp_53, rax_53) = mulx (b @ 2) rdx_45
    (cf_54, r12_54) = adcx r12_52 rax_53 cf_51
    (of_55, r13_55) = adox r13_38 rbp_53 of_52
    (rbp_56, rax_56) = mulx (b @ 3) rdx_45
    (cf_57, r13_57) = adcx r13_55 rax_56 cf_54
    (of_58, r14_58) = adox r14_42 rbp_56 of_55
    (rbp_59, rax_59) = mulx (b @ 4) rdx_45
    (cf_60, r14_60) = adcx r14_58 rax_59 cf_57
    (of_61, r15_61) = adox r15_44 rbp_59 of_58
    (rbp_62, rax_62) = mulx (b @ 5) rdx_45
    rdx_63 = n0
    (cf_64, r15_64) = adcx r15_61 rax_62 cf_60
    (of_65, rbp_65) = adox rbp_62 r8_46 of_61
    (cf_66, r8_66) = adcx r8_46 rbp_65 cf_64
    rdx_67 = imul rdx_63 r11_51
    r9_68 = 0
    of_68 = False
    cf_68 = False
    (rbp_69, rax_69) = mulx (b @ 0) rdx_67
    (cf_70, r11_70) = adcx r11_51 rax_69 cf_68
    (of_71, r12_71) = adox r12_54 rbp_69 of_68
    (rbp_72, rax_72) = mulx (b @ 1) rdx_67
    (cf_73, r12_73) = adcx r12_71 rax_72 cf_70
    (of_74, r13_74) = adox r13_57 rbp_72 of_71
    (rbp_75, rax_75) = mulx (b @ 2) rdx_67
    (cf_76, r13_76) = adcx r13_74 rax_75 cf_73
    (of_77, r14_77) = adox r14_60 rbp_75 of_74
    (rbp_78, rax_78) = mulx (b @ 3) rdx_67
    (cf_79, r14_79) = adcx r14_77 rax_78 cf_76
    (of_80, r15_80) = adox r15_64 rbp_78 of_77
    (rbp_81, rax_81) = mulx (b @ 4) rdx_67
    (cf_82, r15_82) = adcx r15_80 rax_81 cf_79
    (of_83, r8_83) = adox r8_66 rbp_81 of_80
    (rbp_84, rax_84) = mulx (b @ 5) rdx_67
    rdx_85 = n0
    (cf_86, r8_86) = adcx r8_83 rax_84 cf_82
    (of_87, rbp_87) = adox rbp_84 r9_68 of_83
    (cf_88, r9_88) = adcx r9_68 rbp_87 cf_86
    rdx_89 = imul rdx_85 r12_73
    r10_90 = 0
    of_90 = False
    cf_90 = False
    (rbp_91, rax_91) = mulx (b @ 0) rdx_89
    (cf_92, r12_92) = adcx r12_73 rax_91 cf_90
    (of_93, r13_93) = adox r13_76 rbp_91 of_90
    (rbp_94, rax_94) = mulx (b @ 1) rdx_89
    (cf_95, r13_95) = adcx r13_93 rax_94 cf_92
    (of_96, r14_96) = adox r14_79 rbp_94 of_93
    (rbp_97, rax_97) = mulx (b @ 2) rdx_89
    (cf_98, r14_98) = adcx r14_96 rax_97 cf_95
    (of_99, r15_99) = adox r15_82 rbp_97 of_96
    (rbp_100, rax_100) = mulx (b @ 3) rdx_89
    (cf_101, r15_101) = adcx r15_99 rax_100 cf_98
    (of_102, r8_102) = adox r8_86 rbp_100 of_99
    (rbp_103, rax_103) = mulx (b @ 4) rdx_89
    (cf_104, r8_104) = adcx r8_102 rax_103 cf_101
    (of_105, r9_105) = adox r9_88 rbp_103 of_102
    (rbp_106, rax_106) = mulx (b @ 5) rdx_89
    rdx_107 = n0
    (cf_108, r9_108) = adcx r9_105 rax_106 cf_104
    (of_109, rbp_109) = adox rbp_106 r10_90 of_105
    (cf_110, r10_110) = adcx r10_90 rbp_109 cf_108
    rdx_111 = imul rdx_107 r13_95
    r11_112 = 0
    of_112 = False
    cf_112 = False
    (rbp_113, rax_113) = mulx (b @ 0) rdx_111
    (cf_114, r13_114) = adcx r13_95 rax_113 cf_112
    (of_115, r14_115) = adox r14_98 rbp_113 of_112
    (rbp_116, rax_116) = mulx (b @ 1) rdx_111
    (cf_117, r14_117) = adcx r14_115 rax_116 cf_114
    (of_118, r15_118) = adox r15_101 rbp_116 of_115
    (rbp_119, rax_119) = mulx (b @ 2) rdx_111
    (cf_120, r15_120) = adcx r15_118 rax_119 cf_117
    (of_121, r8_121) = adox r8_104 rbp_119 of_118
    (rbp_122, rax_122) = mulx (b @ 3) rdx_111
    (cf_123, r8_123) = adcx r8_121 rax_122 cf_120
    (of_124, r9_124) = adox r9_108 rbp_122 of_121
    (rbp_125, rax_125) = mulx (b @ 4) rdx_111
    (cf_126, r9_126) = adcx r9_124 rax_125 cf_123
    (of_127, r10_127) = adox r10_110 rbp_125 of_124
    (rbp_128, rax_128) = mulx (b @ 5) rdx_111
    rdx_129 = n0
    (cf_130, r10_130) = adcx r10_127 rax_128 cf_126
    (of_131, rbp_131) = adox rbp_128 r11_112 of_127
    (cf_132, r11_132) = adcx r11_112 rbp_131 cf_130
    result = [r8_123, r9_126, r10_130, r11_132, r12_92, r13_114, r14_117, r15_120]

__mulx_mont_384
  : [9][64] // acc registers
  -> [64] // b[0]; stored in rdx
  -> [64] // stack[1]
  -> [64] // lo; stored in rdi
  -> [64] // hi; stored in rbp
  -> Vec384 // a; pointer in rsi
  -> Vec384 // b; pointer in rbx
  -> Vec384 // n; pointer in rcx
  -> Vec384 // result
__mulx_mont_384 acc b0 stack1_0 lo hi a b n = result
  where
    [r8_0, r9_0, _, _, r12_0, _, r14_0, r15_0, rax_0] = acc
    rdx_0 = b0
    rdi_0 = lo
    rbp_0 = hi
    (r10_1, r14_1) = mulx r15_0 rdx_0
    (r11_2, r15_2) = mulx rax_0 rdx_0
    (cf_3, r9_13) = add r9_0 r14_1
    (r12_4, rax_4) = mulx r12_0 rdx_0
    (cf_5, r10_5) = adc r10_1 r15_2 cf_3
    (r13_6, rdi_6) = mulx rdi_0 rdx_0
    (cf_7, r11_7) = adc r11_2 rax_4 cf_5
    (r14_8, rbp_8) = mulx rbp_0 rdx_0
    rdx_9 = b @ 1
    (cf_10, r12_10) = adc r12_4 rdi_6 cf_7
    (cf_11, r13_11) = adc r13_6 rbp_8 cf_10
    (cf_12, r14_12) = adc r14_8 0 cf_11
    r15_13 = 0
    of_13 = False
    cf_13 = False
    stack2_14 = r8_0
    r8_15 = imul r8_0 stack1_0
    rax_16 = 0
    of_16 = False
    cf_16 = False
    (rbp_17, rdi_17) = mulx (a @ 0) rdx_9
    (of_18, r9_18) = adox r9_13 rdi_17 of_16
    (cf_19, r10_19) = adcx r10_5 rbp_17 cf_16
    (rbp_20, rdi_20) = mulx (a @ 1) rdx_9
    (of_21, r10_21) = adox r10_19 rdi_20 of_18
    (cf_22, r11_22) = adcx r11_7 rbp_20 cf_19
    (rbp_23, rdi_23) = mulx (a @ 2) rdx_9
    (of_24, r11_24) = adox r11_22 rdi_23 of_21
    (cf_25, r12_25) = adcx r12_10 rbp_23 cf_22
    (rbp_26, rdi_26) = mulx (a @ 3) rdx_9
    (of_27, r12_27) = adox r12_25 rdi_26 of_24
    (cf_28, r13_28) = adcx r13_11 rbp_26 cf_25
    (rbp_29, rdi_29) = mulx (a @ 4) rdx_9
    (of_30, r13_30) = adox r13_28 rdi_29 of_27
    (cf_31, r14_31) = adcx r14_12 rbp_29 cf_28
    (rbp_32, rdi_32) = mulx (a @ 5) rdx_9
    rdx_33 = r8_15
    (of_34, r14_34) = adox r14_31 rdi_32 of_30
    (cf_35, r15_35) = adcx r15_13 rbp_32 cf_31
    (of_36, r15_36) = adox r15_35 rax_16 of_34
    (of_37, rax_37) = adox rax_16 rax_16 of_36
    r8_38 = 0
    of_38 = False
    cf_38 = False
    (rbp_39, rdi_39) = mulx (n @ 0) rdx_33
    (cf_40, rdi_40) = adcx rdi_39 stack2_14 cf_38
    (of_41, r9_41) = adox r9_18 rbp_39 of_38
    (rbp_42, rdi_42) = mulx (n @ 1) rdx_33
    (cf_43, r9_43) = adcx r9_41 rdi_42 cf_40
    (of_44, r10_44) = adox r10_21 rbp_42 of_41
    (rbp_45, rdi_45) = mulx (n @ 2) rdx_33
    (cf_46, r10_46) = adcx r10_44 rdi_45 cf_43
    (of_47, r11_47) = adox r11_24 rbp_45 of_44
    (rbp_48, rdi_48) = mulx (n @ 3) rdx_33
    (cf_49, r11_49) = adcx r11_47 rdi_48 cf_46
    (of_50, r12_50) = adox r12_27 rbp_48 of_47
    (rbp_51, rdi_51) = mulx (n @ 4) rdx_33
    (cf_52, r12_52) = adcx r12_50 rdi_51 cf_49
    (of_53, r13_53) = adox r13_30 rbp_51 of_50
    (rbp_54, rdi_54) = mulx (n @ 5) rdx_33
    rdx_55 = b @ 2
    (cf_56, r13_56) = adcx r13_53 rdi_54 cf_52
    (of_57, r14_57) = adox r14_34 rbp_54 of_53
    (cf_58, r14_58) = adcx r14_57 r8_38 cf_56
    (of_59, r15_59) = adox r15_36 r8_38 of_57
    (cf_60, r15_60) = adcx r15_59 r8_38 cf_58
    (of_61, rax_61) = adox rax_37 r8_38 of_59
    (cf_62, rax_62) = adcx rax_61 r8_38 cf_60
    stack2_63 = r9_43
    r9_64 = imul r9_43 stack1_0
    r8_65 = 0
    of_65 = False
    cf_65 = False
    (rbp_66, rdi_66) = mulx (a @ 0) rdx_55
    (of_67, r10_67) = adox r10_46 rdi_66 of_65
    (cf_68, r11_68) = adcx r11_49 rbp_66 cf_65
    (rbp_69, rdi_69) = mulx (a @ 1) rdx_55
    (of_70, r11_70) = adox r11_68 rdi_69 of_67
    (cf_71, r12_71) = adcx r12_52 rbp_69 cf_68
    (rbp_72, rdi_72) = mulx (a @ 2) rdx_55
    (of_73, r12_73) = adox r12_71 rdi_72 of_70
    (cf_74, r13_74) = adcx r13_56 rbp_72 cf_71
    (rbp_75, rdi_75) = mulx (a @ 3) rdx_55
    (of_76, r13_76) = adox r13_74 rdi_75 of_73
    (cf_77, r14_77) = adcx r14_58 rbp_75 cf_74
    (rbp_78, rdi_78) = mulx (a @ 4) rdx_55
    (of_79, r14_79) = adox r14_77 rdi_78 of_76
    (cf_80, r15_80) = adcx r15_60 rbp_78 cf_77
    (rbp_81, rdi_81) = mulx (a @ 5) rdx_55
    rdx_82 = r9_64
    (of_83, r15_83) = adox r15_80 rdi_81 of_79
    (cf_84, rax_84) = adcx rax_62 rbp_81 cf_80
    (of_85, rax_85) = adox rax_84 r8_65 of_83
    (of_86, r8_86) = adox r8_65 r8_65 of_85
    r9_87 = 0
    of_87 = False
    cf_87 = False
    (rbp_88, rdi_88) = mulx (n @ 0) rdx_82
    (cf_89, rdi_89) = adcx rdi_88 stack2_63 cf_87
    (of_90, r10_90) = adox r10_67 rbp_88 of_87
    (rbp_91, rdi_91) = mulx (n @ 1) rdx_82
    (cf_92, r10_92) = adcx r10_90 rdi_91 cf_89
    (of_93, r11_93) = adox r11_70 rbp_91 of_90
    (rbp_94, rdi_94) = mulx (n @ 2) rdx_82
    (cf_95, r11_95) = adcx r11_93 rdi_94 cf_92
    (of_96, r12_96) = adox r12_73 rbp_94 of_93
    (rbp_97, rdi_97) = mulx (n @ 3) rdx_82
    (cf_98, r12_98) = adcx r12_96 rdi_97 cf_95
    (of_99, r13_99) = adox r13_76 rbp_97 of_96
    (rbp_100, rdi_100) = mulx (n @ 4) rdx_82
    (cf_101, r13_101) = adcx r13_99 rdi_100 cf_98
    (of_102, r14_102) = adox r14_79 rbp_100 of_99
    (rbp_103, rdi_103) = mulx (n @ 5) rdx_82
    rdx_104 = b @ 3
    (cf_105, r14_105) = adcx r14_102 rdi_103 cf_101
    (of_106, r15_106) = adox r15_83 rbp_103 of_102
    (cf_107, r15_107) = adcx r15_106 r9_87 cf_105
    (of_108, rax_108) = adox rax_85 r9_87 of_106
    (cf_109, rax_109) = adcx rax_108 r9_87 cf_107
    (of_110, r8_110) = adox r8_86 r9_87 of_108
    (cf_111, r8_111) = adcx r8_110 r9_87 cf_109
    stack2_112 = r10_92
    r10_113 = imul r10_92 stack1_0
    r9_114 = 0
    of_114 = False
    cf_114 = False
    (rbp_115, rdi_115) = mulx (a @ 0) rdx_104
    (of_116, r11_116) = adox r11_95 rdi_115 of_114
    (cf_117, r12_117) = adcx r12_98 rbp_115 cf_114
    (rbp_118, rdi_118) = mulx (a @ 1) rdx_104
    (of_119, r12_119) = adox r12_117 rdi_118 of_116
    (cf_120, r13_120) = adcx r13_101 rbp_118 cf_117
    (rbp_121, rdi_121) = mulx (a @ 2) rdx_104
    (of_122, r13_122) = adox r13_120 rdi_121 of_119
    (cf_123, r14_123) = adcx r14_105 rbp_121 cf_120
    (rbp_124, rdi_124) = mulx (a @ 3) rdx_104
    (of_125, r14_125) = adox r14_123 rdi_124 of_122
    (cf_126, r15_126) = adcx r15_107 rbp_124 cf_123
    (rbp_127, rdi_127) = mulx (a @ 4) rdx_104
    (of_128, r15_128) = adox r15_126 rdi_127 of_125
    (cf_129, rax_129) = adcx rax_109 rbp_127 cf_126
    (rbp_130, rdi_130) = mulx (a @ 5) rdx_104
    rdx_131 = r10_113
    (of_132, rax_132) = adox rax_129 rdi_130 of_128
    (cf_133, r8_133) = adcx r8_111 rbp_130 cf_129
    (of_134, r8_134) = adox r8_133 r9_114 of_132
    (of_135, r9_135) = adox r9_114 r9_114 of_134
    r10_136 = 0
    of_136 = False
    cf_136 = False
    (rbp_137, rdi_137) = mulx (n @ 0) rdx_131
    (cf_138, rdi_138) = adcx rdi_137 stack2_112 cf_136
    (of_139, r11_139) = adox r11_116 rbp_137 of_136
    (rbp_140, rdi_140) = mulx (n @ 1) rdx_131
    (cf_141, r11_141) = adcx r11_139 rdi_140 cf_138
    (of_142, r12_142) = adox r12_119 rbp_140 of_139
    (rbp_143, rdi_143) = mulx (n @ 2) rdx_131
    (cf_144, r12_144) = adcx r12_142 rdi_143 cf_141
    (of_145, r13_145) = adox r13_122 rbp_143 of_142
    (rbp_146, rdi_146) = mulx (n @ 3) rdx_131
    (cf_147, r13_147) = adcx r13_145 rdi_146 cf_144
    (of_148, r14_148) = adox r14_125 rbp_146 of_145
    (rbp_149, rdi_149) = mulx (n @ 4) rdx_131
    (cf_150, r14_150) = adcx r14_148 rdi_149 cf_147
    (of_151, r15_151) = adox r15_128 rbp_149 of_148
    (rbp_152, rdi_152) = mulx (n @ 5) rdx_131
    rdx_153 = b @ 4
    (cf_154, r15_154) = adcx r15_151 rdi_152 cf_150
    (of_155, rax_155) = adox rax_132 rbp_152 of_151
    (cf_156, rax_156) = adcx rax_155 r10_136 cf_154
    (of_157, r8_157) = adox r8_134 r10_136 of_155
    (cf_158, r8_158) = adcx r8_157 r10_136 cf_156
    (of_159, r9_159) = adox r9_135 r10_136 of_157
    (cf_160, r9_160) = adcx r9_159 r10_136 cf_158
    stack2_161 = r11_141
    r11_162 = imul r11_141 stack1_0
    r10_163 = 0
    of_163 = False
    cf_163 = False
    (rbp_164, rdi_164) = mulx (a @ 0) rdx_153
    (of_165, r12_165) = adox r12_144 rdi_164 of_163
    (cf_166, r13_166) = adcx r13_147 rbp_164 cf_163
    (rbp_167, rdi_167) = mulx (a @ 1) rdx_153
    (of_168, r13_168) = adox r13_166 rdi_167 of_165
    (cf_169, r14_169) = adcx r14_150 rbp_167 cf_166
    (rbp_170, rdi_170) = mulx (a @ 2) rdx_153
    (of_171, r14_171) = adox r14_169 rdi_170 of_168
    (cf_172, r15_172) = adcx r15_154 rbp_170 cf_169
    (rbp_173, rdi_173) = mulx (a @ 3) rdx_153
    (of_174, r15_174) = adox r15_172 rdi_173 of_171
    (cf_175, rax_175) = adcx rax_156 rbp_173 cf_172
    (rbp_176, rdi_176) = mulx (a @ 4) rdx_153
    (of_177, rax_177) = adox rax_175 rdi_176 of_174
    (cf_178, r8_178) = adcx r8_158 rbp_176 cf_175
    (rbp_179, rdi_179) = mulx (a @ 5) rdx_153
    rdx_180 = r11_162
    (of_181, r8_181) = adox r8_178 rdi_179 of_177
    (cf_182, r9_182) = adcx r9_160 rbp_179 cf_178
    (of_183, r9_183) = adox r9_182 r10_163 of_181
    (of_184, r10_184) = adox r10_163 r10_163 of_183
    r11_185 = 0
    of_185 = False
    cf_185 = False
    (rbp_186, rdi_186) = mulx (n @ 0) rdx_180
    (cf_187, rdi_187) = adcx rdi_186 stack2_161 cf_185
    (of_188, r12_188) = adox r12_165 rbp_186 of_185
    (rbp_189, rdi_189) = mulx (n @ 1) rdx_180
    (cf_190, r12_190) = adcx r12_188 rdi_189 cf_187
    (of_191, r13_191) = adox r13_168 rbp_189 of_188
    (rbp_192, rdi_192) = mulx (n @ 2) rdx_180
    (cf_193, r13_193) = adcx r13_191 rdi_192 cf_190
    (of_194, r14_194) = adox r14_171 rbp_192 of_191
    (rbp_195, rdi_195) = mulx (n @ 3) rdx_180
    (cf_196, r14_196) = adcx r14_194 rdi_195 cf_193
    (of_197, r15_197) = adox r15_174 rbp_195 of_194
    (rbp_198, rdi_198) = mulx (n @ 4) rdx_180
    (cf_199, r15_199) = adcx r15_197 rdi_198 cf_196
    (of_200, rax_200) = adox rax_177 rbp_198 of_197
    (rbp_201, rdi_201) = mulx (n @ 5) rdx_180
    rdx_202 = b @ 5
    (cf_203, rax_203) = adcx rax_200 rdi_201 cf_199
    (of_204, r8_204) = adox r8_181 rbp_201 of_200
    (cf_205, r8_205) = adcx r8_204 r11_185 cf_203
    (of_206, r9_206) = adox r9_183 r11_185 of_204
    (cf_207, r9_207) = adcx r9_206 r11_185 cf_205
    (of_208, r10_208) = adox r10_184 r11_185 of_206
    (cf_209, r10_209) = adcx r10_208 r11_185 cf_207
    stack2_210 = r12_190
    r12_211 = imul r12_190 stack1_0
    r11_212 = 0
    of_212 = False
    cf_212 = False
    (rbp_213, rdi_213) = mulx (a @ 0) rdx_202
    (of_214, r13_214) = adox r13_193 rdi_213 of_212
    (cf_215, r14_215) = adcx r14_196 rbp_213 cf_212
    (rbp_216, rdi_216) = mulx (a @ 1) rdx_202
    (of_217, r14_217) = adox r14_215 rdi_216 of_214
    (cf_218, r15_218) = adcx r15_199 rbp_216 cf_215
    (rbp_219, rdi_219) = mulx (a @ 2) rdx_202
    (of_220, r15_220) = adox r15_218 rdi_219 of_217
    (cf_221, rax_221) = adcx rax_203 rbp_219 cf_218
    (rbp_222, rdi_222) = mulx (a @ 3) rdx_202
    (of_223, rax_223) = adox rax_221 rdi_222 of_220
    (cf_224, r8_224) = adcx r8_205 rbp_222 cf_221
    (rbp_225, rdi_225) = mulx (a @ 4) rdx_202
    (of_226, r8_226) = adox r8_224 rdi_225 of_223
    (cf_227, r9_227) = adcx r9_207 rbp_225 cf_224
    (rbp_228, rdi_228) = mulx (a @ 5) rdx_202
    rdx_229 = r12_211
    (of_230, r9_230) = adox r9_227 rdi_228 of_226
    (cf_231, r10_231) = adcx r10_209 rbp_228 cf_227
    (of_232, r10_232) = adox r10_231 r11_212 of_230
    (of_233, r11_233) = adox r11_212 r11_212 of_232
    r12_234 = 0
    of_234 = False
    cf_234 = False
    (rbp_235, rdi_235) = mulx (n @ 0) rdx_229
    (cf_236, rdi_236) = adcx rdi_235 stack2_210 cf_234
    (of_237, r13_237) = adox r13_214 rbp_235 of_234
    (rbp_238, rdi_238) = mulx (n @ 1) rdx_229
    (cf_239, r13_239) = adcx r13_237 rdi_238 cf_236
    (of_240, r14_240) = adox r14_217 rbp_238 of_237
    (rbp_241, rdi_241) = mulx (n @ 2) rdx_229
    (cf_242, r14_242) = adcx r14_240 rdi_241 cf_239
    (of_243, r15_243) = adox r15_220 rbp_241 of_240
    (rbp_244, rdi_244) = mulx (n @ 3) rdx_229
    (cf_245, r15_245) = adcx r15_243 rdi_244 cf_242
    (of_246, rax_246) = adox rax_223 rbp_244 of_243
    (rbp_247, rdi_247) = mulx (n @ 4) rdx_229
    (cf_248, rax_248) = adcx rax_246 rdi_247 cf_245
    (of_249, r8_249) = adox r8_226 rbp_247 of_246
    (rbp_250, rdi_250) = mulx (n @ 5) rdx_229
    rdx_251 = r13_239
    (cf_252, r8_252) = adcx r8_249 rdi_250 cf_248
    (of_253, r9_253) = adox r9_230 rbp_250 of_249
    (cf_254, r9_254) = adcx r9_253 r12_234 cf_252
    (of_255, r10_255) = adox r10_232 r12_234 of_253
    (cf_256, r10_256) = adcx r10_255 r12_234 cf_254
    (of_257, r11_257) = adox r11_233 r12_234 of_255
    (cf_258, r11_258) = adcx r11_257 r12_234 cf_256
    rdx_259 = imul rdx_251 stack1_0
    r12_261 = 0
    of_261 = False
    cf_261 = False
    (rbp_262, rdi_262) = mulx (n @ 0) rdx_259
    (cf_263, r13_263) = adcx r13_239 rdi_262 cf_261
    (of_264, r14_264) = adox r14_242 rbp_262 of_261
    (rbp_265, rdi_265) = mulx (n @ 1) rdx_259
    (cf_266, r14_266) = adcx r14_264 rdi_265 cf_263
    (of_267, r15_267) = adox r15_245 rbp_265 of_264
    (rbp_268, rdi_268) = mulx (n @ 2) rdx_259
    (cf_269, r15_269) = adcx r15_267 rdi_268 cf_266
    (of_270, rax_270) = adox rax_248 rbp_268 of_267
    (rbp_271, rdi_271) = mulx (n @ 3) rdx_259
    (cf_272, rax_272) = adcx rax_270 rdi_271 cf_269
    (of_273, r8_273) = adox r8_252 rbp_271 of_270
    r13_274 = r15_269
    (rbp_275, rdi_275) = mulx (n @ 4) rdx_259
    (cf_276, r8_276) = adcx r8_273 rdi_275 cf_272
    (of_277, r9_277) = adox r9_254 rbp_275 of_273
    rsi_278 = rax_272
    (rbp_279, rdi_279) = mulx (n @ 5) rdx_259
    (cf_280, r9_280) = adcx r9_277 rdi_279 cf_276
    (of_281, r10_281) = adox r10_256 rbp_279 of_277
    rdx_282 = r14_266
    (cf_283, r10_283) = adcx r10_281 r12_261 cf_280
    (of_284, r11_284) = adox r11_258 r12_261 of_281
    r12_286 = r8_276
    (cf_287, r11_287) = adc r11_284 0 cf_283
    (cf_288, r14_288) = sub r14_266 (n @ 0)
    (cf_289, r15_288) = sbb r15_269 (n @ 1) cf_288
    rdi_290 = r9_280
    (cf_291, rax_291) = sbb rax_272 (n @ 2) cf_289
    (cf_292, r8_292) = sbb r8_276 (n @ 3) cf_291
    (cf_293, r9_293) = sbb r9_280 (n @ 4) cf_292
    rbp_294 = r10_283
    (cf_295, r10_295) = sbb r10_283 (n @ 5) cf_293
    (cf_296, r11_296) = sbb r11_287 0 cf_295
    rdx_297 = cmovae rdx_282 r14_288 cf_296
    r15_298 = cmovb r15_288 r13_274 cf_296
    rax_299 = cmovb rax_291 rsi_278 cf_296
    r12_300 = cmovae r12_286 r8_292 cf_296
    result0 = rdx_297
    rdi_302 = cmovae rdi_290 r9_293 cf_296
    result1 = r15_298
    rbp_304 = cmovae rbp_294 r10_295 cf_296
    result2 = rax_299
    result3 = r12_300
    result4 = rdi_302
    result5 = rbp_304
    result = [result0, result1, result2, result3, result4, result5]

__mulx_mont_383_nonred
  : [9][64] // acc registers
  -> [64] // b[0]; stored in rdx
  -> [64] // stack[1]
  -> [64] // lo; stored in rdi
  -> [64] // hi; stored in rbp
  -> Vec384 // a; pointer in rsi
  -> Vec384 // b; pointer in rbx
  -> Vec384 // n; pointer in rcx
  -> Vec384 // result
__mulx_mont_383_nonred acc b0 stack1_0 lo hi a b n = result
  where
    [r8_0, r9_0, _, _, r12_0, _, r14_0, r15_0, rax_0] = acc
    rdx_0 = b0
    rdi_0 = lo
    rbp_0 = hi
    (r10_1, r14_1) = mulx r15_0 rdx_0
    (r11_2, r15_2) = mulx rax_0 rdx_0
    (cf_3, r9_3) = add r9_0 r14_1
    (r12_4, rax_4) = mulx r12_0 rdx_0
    (cf_5, r10_5) = adc r10_1 r15_2 cf_3
    (r13_6, rdi_6) = mulx rdi_0 rdx_0
    (cf_7, r11_7) = adc r11_2 rax_4 cf_5
    (r14_8, rbp_8) = mulx rbp_0 rdx_0
    rdx_9 = b @ 1
    (cf_10, r12_10) = adc r12_4 rdi_6 cf_7
    (cf_11, r13_11) = adc r13_6 rbp_8 cf_10
    (cf_12, r14_12) = adc r14_8 0 cf_11
    rax_13 = r8_0
    r8_14 = imul r8_0 stack1_0
    r15_15 = 0
    of_15 = False
    cf_15 = False
    (rbp_16, rdi_16) = mulx (a @ 0) rdx_9
    (of_17, r9_17) = adox r9_3 rdi_16 of_15
    (cf_18, r10_18) = adcx r10_5 rbp_16 cf_15
    (rbp_19, rdi_19) = mulx (a @ 1) rdx_9
    (of_20, r10_20) = adox r10_18 rdi_19 of_17
    (cf_21, r11_21) = adcx r11_7 rbp_19 cf_18
    (rbp_22, rdi_22) = mulx (a @ 2) rdx_9
    (of_23, r11_23) = adox r11_21 rdi_22 of_20
    (cf_24, r12_24) = adcx r12_10 rbp_22 cf_21
    (rbp_25, rdi_25) = mulx (a @ 3) rdx_9
    (of_26, r12_26) = adox r12_24 rdi_25 of_23
    (cf_27, r13_27) = adcx r13_11 rbp_25 cf_24
    (rbp_28, rdi_28) = mulx (a @ 4) rdx_9
    (of_29, r13_29) = adox r13_27 rdi_28 of_26
    (cf_30, r14_30) = adcx r14_12 rbp_28 cf_27
    (rbp_31, rdi_31) = mulx (a @ 5) rdx_9
    rdx_32 = r8_14
    (of_33, r14_33) = adox r14_30 rdi_31 of_29
    (cf_34, rbp_34) = adcx rbp_31 r15_15 cf_30
    (of_35, r15_35) = adox r15_15 rbp_34 of_33
    r8_36 = 0
    of_36 = False
    cf_36 = False
    (rbp_37, rdi_37) = mulx (n @ 0) rdx_32
    (cf_38, rax_38) = adcx rax_13 rdi_37 cf_36
    (of_39, r9_39) = adox r9_17 rbp_37 of_36
    (rbp_40, rdi_40) = mulx (n @ 1) rdx_32
    (cf_41, r9_41) = adcx r9_39 rdi_40 cf_38
    (of_42, r10_42) = adox r10_20 rbp_40 of_39
    (rbp_43, rdi_43) = mulx (n @ 2) rdx_32
    (cf_44, r10_44) = adcx r10_42 rdi_43 cf_41
    (of_45, r11_45) = adox r11_23 rbp_43 of_42
    (rbp_46, rdi_46) = mulx (n @ 3) rdx_32
    (cf_47, r11_47) = adcx r11_45 rdi_46 cf_44
    (of_48, r12_48) = adox r12_26 rbp_46 of_45
    (rbp_49, rdi_49) = mulx (n @ 4) rdx_32
    (cf_50, r12_50) = adcx r12_48 rdi_49 cf_47
    (of_51, r13_51) = adox r13_29 rbp_49 of_48
    (rbp_52, rdi_52) = mulx (n @ 5) rdx_32
    rdx_53 = b @ 2
    (cf_54, r13_54) = adcx r13_51 rdi_52 cf_50
    (of_55, r14_55) = adox r14_33 rbp_52 of_51
    (cf_56, r14_56) = adcx r14_55 rax_38 cf_54
    (of_57, r15_57) = adox r15_35 rax_38 of_55
    (cf_58, r15_58) = adcx r15_57 rax_38 cf_56
    r8_59 = r9_41
    r9_60 = imul r9_41 stack1_0
    rax_61 = 0
    of_61 = False
    cf_61 = False
    (rbp_62, rdi_62) = mulx (a @ 0) rdx_53
    (of_63, r10_63) = adox r10_44 rdi_62 of_61
    (cf_64, r11_64) = adcx r11_47 rbp_62 cf_61
    (rbp_65, rdi_65) = mulx (a @ 1) rdx_53
    (of_66, r11_66) = adox r11_64 rdi_65 of_63
    (cf_67, r12_67) = adcx r12_50 rbp_65 cf_64
    (rbp_68, rdi_68) = mulx (a @ 2) rdx_53
    (of_69, r12_69) = adox r12_67 rdi_68 of_66
    (cf_70, r13_70) = adcx r13_54 rbp_68 cf_67
    (rbp_71, rdi_71) = mulx (a @ 3) rdx_53
    (of_72, r13_72) = adox r13_70 rdi_71 of_69
    (cf_73, r14_73) = adcx r14_56 rbp_71 cf_70
    (rbp_74, rdi_74) = mulx (a @ 4) rdx_53
    (of_75, r14_75) = adox r14_73 rdi_74 of_72
    (cf_76, r15_76) = adcx r15_58 rbp_74 cf_73
    (rbp_77, rdi_77) = mulx (a @ 5) rdx_53
    rdx_78 = r9_60
    (of_79, r15_79) = adox r15_76 rdi_77 of_75
    (cf_80, rbp_80) = adcx rbp_77 rax_61 cf_76
    (of_81, rax_81) = adox rax_61 rbp_80 of_79
    r9_82 = 0
    of_82 = False
    cf_82 = False
    (rbp_83, rdi_83) = mulx (n @ 0) rdx_78
    (cf_84, r8_84) = adcx r8_59 rdi_83 cf_82
    (of_85, r10_85) = adox r10_63 rbp_83 of_82
    (rbp_86, rdi_86) = mulx (n @ 1) rdx_78
    (cf_87, r10_87) = adcx r10_85 rdi_86 cf_84
    (of_88, r11_88) = adox r11_66 rbp_86 of_85
    (rbp_89, rdi_89) = mulx (n @ 2) rdx_78
    (cf_90, r11_90) = adcx r11_88 rdi_89 cf_87
    (of_91, r12_91) = adox r12_69 rbp_89 of_88
    (rbp_92, rdi_92) = mulx (n @ 3) rdx_78
    (cf_93, r12_93) = adcx r12_91 rdi_92 cf_90
    (of_94, r13_94) = adox r13_72 rbp_92 of_91
    (rbp_95, rdi_95) = mulx (n @ 4) rdx_78
    (cf_96, r13_96) = adcx r13_94 rdi_95 cf_93
    (of_97, r14_97) = adox r14_75 rbp_95 of_94
    (rbp_98, rdi_98) = mulx (n @ 5) rdx_78
    rdx_99 = b @ 3
    (cf_100, r14_100) = adcx r14_97 rdi_98 cf_96
    (of_101, r15_101) = adox r15_79 rbp_98 of_97
    (cf_102, r15_102) = adcx r15_101 r8_84 cf_100
    (of_103, rax_103) = adox rax_81 r8_84 of_101
    (cf_104, rax_104) = adcx rax_103 r8_84 cf_102
    r9_105 = r10_87
    r10_106 = imul r10_87 stack1_0
    r8_107 = 0
    of_107 = False
    cf_107 = False
    (rbp_108, rdi_108) = mulx (a @ 0) rdx_99
    (of_109, r11_109) = adox r11_90 rdi_108 of_107
    (cf_110, r12_110) = adcx r12_93 rbp_108 cf_107
    (rbp_111, rdi_111) = mulx (a @ 1) rdx_99
    (of_112, r12_112) = adox r12_110 rdi_111 of_109
    (cf_113, r13_113) = adcx r13_96 rbp_111 cf_110
    (rbp_114, rdi_114) = mulx (a @ 2) rdx_99
    (of_115, r13_115) = adox r13_113 rdi_114 of_112
    (cf_116, r14_116) = adcx r14_100 rbp_114 cf_113
    (rbp_117, rdi_117) = mulx (a @ 3) rdx_99
    (of_118, r14_118) = adox r14_116 rdi_117 of_115
    (cf_119, r15_119) = adcx r15_102 rbp_117 cf_116
    (rbp_120, rdi_120) = mulx (a @ 4) rdx_99
    (of_121, r15_121) = adox r15_119 rdi_120 of_118
    (cf_122, rax_122) = adcx rax_104 rbp_120 cf_119
    (rbp_123, rdi_123) = mulx (a @ 5) rdx_99
    rdx_124 = r10_106
    (of_125, rax_125) = adox rax_122 rdi_123 of_121
    (cf_126, rbp_126) = adcx rbp_123 r8_107 cf_122
    (of_127, r8_127) = adox r8_107 rbp_126 of_125
    r10_128 = 0
    of_128 = False
    cf_128 = False
    (rbp_129, rdi_129) = mulx (n @ 0) rdx_124
    (cf_130, r9_130) = adcx r9_105 rdi_129 cf_128
    (of_131, r11_131) = adox r11_109 rbp_129 of_128
    (rbp_132, rdi_132) = mulx (n @ 1) rdx_124
    (cf_133, r11_133) = adcx r11_131 rdi_132 cf_130
    (of_134, r12_134) = adox r12_112 rbp_132 of_131
    (rbp_135, rdi_135) = mulx (n @ 2) rdx_124
    (cf_136, r12_136) = adcx r12_134 rdi_135 cf_133
    (of_137, r13_137) = adox r13_115 rbp_135 of_134
    (rbp_138, rdi_138) = mulx (n @ 3) rdx_124
    (cf_139, r13_139) = adcx r13_137 rdi_138 cf_136
    (of_140, r14_140) = adox r14_118 rbp_138 of_137
    (rbp_141, rdi_141) = mulx (n @ 4) rdx_124
    (cf_142, r14_142) = adcx r14_140 rdi_141 cf_139
    (of_143, r15_143) = adox r15_121 rbp_141 of_140
    (rbp_144, rdi_144) = mulx (n @ 5) rdx_124
    rdx_145 = b @ 4
    (cf_146, r15_146) = adcx r15_143 rdi_144 cf_142
    (of_147, rax_147) = adox rax_125 rbp_144 of_143
    (cf_148, rax_148) = adcx rax_147 r9_130 cf_146
    (of_149, r8_149) = adox r8_127 r9_130 of_147
    (cf_150, r8_150) = adcx r8_149 r9_130 cf_148
    r10_151 = r11_133
    r11_152 = imul r11_133 stack1_0
    r9_153 = 0
    of_153 = False
    cf_153 = False
    (rbp_154, rdi_154) = mulx (a @ 0) rdx_145
    (of_155, r12_155) = adox r12_136 rdi_154 of_153
    (cf_156, r13_156) = adcx r13_139 rbp_154 cf_153
    (rbp_157, rdi_157) = mulx (a @ 1) rdx_145
    (of_158, r13_158) = adox r13_156 rdi_157 of_155
    (cf_159, r14_159) = adcx r14_142 rbp_157 cf_156
    (rbp_160, rdi_160) = mulx (a @ 2) rdx_145
    (of_161, r14_161) = adox r14_159 rdi_160 of_158
    (cf_162, r15_162) = adcx r15_146 rbp_160 cf_159
    (rbp_163, rdi_163) = mulx (a @ 3) rdx_145
    (of_164, r15_164) = adox r15_162 rdi_163 of_161
    (cf_165, rax_165) = adcx rax_148 rbp_163 cf_162
    (rbp_166, rdi_166) = mulx (a @ 4) rdx_145
    (of_167, rax_167) = adox rax_165 rdi_166 of_164
    (cf_168, r8_168) = adcx r8_150 rbp_166 cf_165
    (rbp_169, rdi_169) = mulx (a @ 5) rdx_145
    rdx_170 = r11_152
    (of_171, r8_171) = adox r8_168 rdi_169 of_167
    (cf_172, rbp_172) = adcx rbp_169 r9_153 cf_168
    (of_173, r9_173) = adox r9_153 rbp_172 of_171
    r11_174 = 0
    of_174 = False
    cf_174 = False
    (rbp_175, rdi_175) = mulx (n @ 0) rdx_170
    (cf_176, r10_176) = adcx r10_151 rdi_175 cf_174
    (of_177, r12_177) = adox r12_155 rbp_175 of_174
    (rbp_178, rdi_178) = mulx (n @ 1) rdx_170
    (cf_179, r12_179) = adcx r12_177 rdi_178 cf_176
    (of_180, r13_180) = adox r13_158 rbp_178 of_177
    (rbp_181, rdi_181) = mulx (n @ 2) rdx_170
    (cf_182, r13_182) = adcx r13_180 rdi_181 cf_179
    (of_183, r14_183) = adox r14_161 rbp_181 of_180
    (rbp_184, rdi_184) = mulx (n @ 3) rdx_170
    (cf_185, r14_185) = adcx r14_183 rdi_184 cf_182
    (of_186, r15_186) = adox r15_164 rbp_184 of_183
    (rbp_187, rdi_187) = mulx (n @ 4) rdx_170
    (cf_188, r15_188) = adcx r15_186 rdi_187 cf_185
    (of_189, rax_189) = adox rax_167 rbp_187 of_186
    (rbp_190, rdi_190) = mulx (n @ 5) rdx_170
    rdx_191 = b @ 5
    (cf_192, rax_192) = adcx rax_189 rdi_190 cf_188
    (of_193, r8_193) = adox r8_171 rbp_190 of_189
    (cf_194, r8_194) = adcx r8_193 r10_176 cf_192
    (of_195, r9_195) = adox r9_173 r10_176 of_193
    (cf_196, r9_196) = adcx r9_195 r10_176 cf_194
    r11_197 = r12_179
    r12_198 = imul r12_179 stack1_0
    r10_199 = 0
    of_199 = False
    cf_199 = False
    (rbp_200, rdi_200) = mulx (a @ 0) rdx_191
    (of_201, r13_201) = adox r13_182 rdi_200 of_199
    (cf_202, r14_202) = adcx r14_185 rbp_200 cf_199
    (rbp_203, rdi_203) = mulx (a @ 1) rdx_191
    (of_204, r14_204) = adox r14_202 rdi_203 of_201
    (cf_205, r15_205) = adcx r15_188 rbp_203 cf_202
    (rbp_206, rdi_206) = mulx (a @ 2) rdx_191
    (of_207, r15_207) = adox r15_205 rdi_206 of_204
    (cf_208, rax_208) = adcx rax_192 rbp_206 cf_205
    (rbp_209, rdi_209) = mulx (a @ 3) rdx_191
    (of_210, rax_210) = adox rax_208 rdi_209 of_207
    (cf_211, r8_211) = adcx r8_194 rbp_209 cf_208
    (rbp_212, rdi_212) = mulx (a @ 4) rdx_191
    (of_213, r8_213) = adox r8_211 rdi_212 of_210
    (cf_214, r9_214) = adcx r9_196 rbp_212 cf_211
    (rbp_215, rdi_215) = mulx (a @ 5) rdx_191
    rdx_216 = r12_198
    (of_217, r9_217) = adox r9_214 rdi_215 of_213
    (cf_218, rbp_218) = adcx rbp_215 r10_199 cf_214
    (of_219, r10_219) = adox r10_199 rbp_218 of_217
    r12_220 = 0
    of_220 = False
    cf_220 = False
    (rbp_221, rdi_221) = mulx (n @ 0) rdx_216
    (cf_222, r11_222) = adcx r11_197 rdi_221 cf_220
    (of_223, r13_223) = adox r13_201 rbp_221 of_220
    (rbp_224, rdi_224) = mulx (n @ 1) rdx_216
    (cf_225, r13_225) = adcx r13_223 rdi_224 cf_222
    (of_226, r14_226) = adox r14_204 rbp_224 of_223
    (rbp_227, rdi_227) = mulx (n @ 2) rdx_216
    (cf_228, r14_228) = adcx r14_226 rdi_227 cf_225
    (of_229, r15_229) = adox r15_207 rbp_227 of_226
    (rbp_230, rdi_230) = mulx (n @ 3) rdx_216
    (cf_231, r15_231) = adcx r15_229 rdi_230 cf_228
    (of_232, rax_232) = adox rax_210 rbp_230 of_229
    (rbp_233, rdi_233) = mulx (n @ 4) rdx_216
    (cf_234, rax_234) = adcx rax_232 rdi_233 cf_231
    (of_235, r8_235) = adox r8_213 rbp_233 of_232
    (rbp_236, rdi_236) = mulx (n @ 5) rdx_216
    rdx_237 = r13_225
    (cf_238, r8_238) = adcx r8_235 rdi_236 cf_234
    (of_239, r9_239) = adox r9_217 rbp_236 of_235
    (cf_240, r9_240) = adcx r9_239 r11_222 cf_238
    (of_241, r10_241) = adox r10_219 r11_222 of_239
    (cf_242, r10_242) = adcx r10_241 r11_222 cf_240
    rdx_243 = imul rdx_237 stack1_0
    r12_245 = 0
    of_245 = False
    cf_245 = False
    (rbp_246, rdi_246) = mulx (n @ 0) rdx_243
    (cf_247, r13_247) = adcx r13_225 rdi_246 cf_245
    (of_248, r14_248) = adox r14_228 rbp_246 of_245
    (rbp_249, rdi_249) = mulx (n @ 1) rdx_243
    (cf_250, r14_250) = adcx r14_248 rdi_249 cf_247
    (of_251, r15_251) = adox r15_231 rbp_249 of_248
    (rbp_252, rdi_252) = mulx (n @ 2) rdx_243
    (cf_253, r15_253) = adcx r15_251 rdi_252 cf_250
    (of_254, rax_254) = adox rax_234 rbp_252 of_251
    (rbp_255, rdi_255) = mulx (n @ 3) rdx_243
    (cf_256, rax_256) = adcx rax_254 rdi_255 cf_253
    (of_257, r8_257) = adox r8_238 rbp_255 of_254
    (rbp_258, rdi_258) = mulx (n @ 4) rdx_243
    (cf_259, r8_259) = adcx r8_257 rdi_258 cf_256
    (of_260, r9_260) = adox r9_240 rbp_258 of_257
    (rbp_261, rdi_261) = mulx (n @ 5) rdx_243
    rdx_262 = r14_250
    (cf_263, r9_263) = adcx r9_260 rdi_261 cf_259
    (of_264, r10_264) = adox r10_242 rbp_261 of_260
    (cf_265, r10_265) = adc r10_264 0 cf_263
    r12_266 = r8_259
    result0 = r14_250
    result1 = r15_253
    result2 = rax_256
    rdi_270 = r9_263
    result3 = r8_259
    result4 = r9_263
    result5 = r10_265
    rbp_274 = r10_265
    result = [result0, result1, result2, result3, result4, result5]

__mulx_mont_sparse_256
  : [7][64] // acc registers
  -> [64] // b[0]; stored in rdx
  -> [64] // stack[1]
  -> [64] // lo; stored in rdi
  -> [64] // hi; stored in rbp
  -> Vec256 // a; pointer in rsi
  -> Vec256 // b; pointer in rbx
  -> Vec256 // n; pointer in rcx
  -> Vec256 // result
__mulx_mont_sparse_256 acc b0 n0 lo hi a b n = result
  where
    [r10_0, r11_0, r12_0, r13_0, r14_0, r15_0, rax_0] = acc
    rdx_0 = b0
    rbp_0 = lo
    r9_0 = hi
    r8_0 = n0
    (r12_1, r15_1) = mulx r15_0 rdx_0
    (r13_2, rbp_2) = mulx rbp_0 rdx_0
    (cf_3, r11_3) = add r11_0 r15_1
    (r14_4, r9_4) = mulx r9_0 rdx_0
    rdx_5 = b @ 1
    (cf_6, r12_6) = adc r12_1 rbp_2 cf_3
    (cf_7, r13_7) = adc r13_2 r9_4 cf_6
    (cf_8, r14_8) = adc r14_4 0 cf_7
    r10_9 = rax_0
    rax_10 = imul rax_0 r8_0
    r15_11 = 0
    cf_11 = False
    of_11 = False
    (r9_12, rbp_12) = mulx (a @ 0) rdx_5
    (of_13, r11_13) = adox r11_3 rbp_12 of_11
    (cf_14, r12_14) = adcx r12_6 r9_12 cf_11
    (r9_15, rbp_15) = mulx (a @ 1) rdx_5
    (of_16, r12_16) = adox r12_14 rbp_15 of_13
    (cf_17, r13_17) = adcx r13_7 r9_15 cf_14
    (r9_18, rbp_18) = mulx (a @ 2) rdx_5
    (of_19, r13_19) = adox r13_17 rbp_18 of_16
    (cf_20, r14_20) = adcx r14_8 r9_18 cf_17
    (r9_21, rbp_21) = mulx (a @ 3) rdx_5
    rdx_22 = rax_10
    (of_23, r14_23) = adox r14_20 rbp_21 of_19
    (cf_24, r9_24) = adcx r9_21 r15_11 cf_20
    (of_25, r15_25) = adox r15_11 r9_24 of_23
    (rax_26, rbp_26) = mulx (n @ 0) rdx_22
    (cf_27, r10_27) = adcx r10_9 rbp_26 cf_24
    (of_28, rax_28) = adox rax_26 r11_13 of_25
    (r9_29, rbp_29) = mulx (n @ 1) rdx_22
    (cf_30, rax_30) = adcx rax_28 rbp_29 cf_27
    (of_31, r12_31) = adox r12_16 r9_29 of_28
    (r9_32, rbp_32) = mulx (n @ 2) rdx_22
    (cf_33, r12_33) = adcx r12_31 rbp_32 cf_30
    (of_34, r13_34) = adox r13_19 r9_32 of_31
    (r9_35, rbp_35) = mulx (n @ 3) rdx_22
    rdx_36 = b @ 2
    (cf_37, r13_37) = adcx r13_34 rbp_35 cf_33
    (of_38, r14_38) = adox r14_23 r9_35 of_34
    (cf_39, r14_39) = adcx r14_38 r10_27 cf_37
    (of_40, r15_40) = adox r15_25 r10_27 of_38
    (cf_41, r15_41) = adcx r15_40 r10_27 cf_39
    (of_42, r10_42) = adox r10_27 r10_27 of_40
    (cf_43, r10_43) = adc r10_42 0 cf_41
    r11_44 = rax_30
    rax_45 = imul rax_30 r8_0
    rbp_46 = 0
    cf_46 = False
    of_46 = False
    (r9_47, rbp_47) = mulx (a @ 0) rdx_36
    (of_48, r12_48) = adox r12_33 rbp_47 of_46
    (cf_49, r13_49) = adcx r13_37 r9_47 cf_46
    (r9_50, rbp_50) = mulx (a @ 1) rdx_36
    (of_51, r13_51) = adox r13_49 rbp_50 of_48
    (cf_52, r14_52) = adcx r14_39 r9_50 cf_49
    (r9_53, rbp_53) = mulx (a @ 2) rdx_36
    (of_54, r14_54) = adox r14_52 rbp_53 of_51
    (cf_55, r15_55) = adcx r15_41 r9_53 cf_52
    (r9_56, rbp_56) = mulx (a @ 3) rdx_36
    rdx_57 = rax_45
    (of_58, r15_58) = adox r15_55 rbp_56 of_54
    (cf_59, r9_59) = adcx r9_56 r10_43 cf_55
    (of_60, r10_60) = adox r10_43 r9_59 of_58
    (rax_61, rbp_61) = mulx (n @ 0) rdx_57
    (cf_62, r11_62) = adcx r11_44 rbp_61 cf_59
    (of_63, rax_63) = adox rax_61 r12_48 of_60
    (r9_64, rbp_64) = mulx (n @ 1) rdx_57
    (cf_65, rax_65) = adcx rax_63 rbp_64 cf_62
    (of_66, r13_66) = adox r13_51 r9_64 of_63
    (r9_67, rbp_67) = mulx (n @ 2) rdx_57
    (cf_68, r13_68) = adcx r13_66 rbp_67 cf_65
    (of_69, r14_69) = adox r14_54 r9_67 of_66
    (r9_70, rbp_70) = mulx (n @ 3) rdx_57
    rdx_71 = b @ 3
    (cf_72, r14_72) = adcx r14_69 rbp_70 cf_68
    (of_73, r15_73) = adox r15_58 r9_70 of_69
    (cf_74, r15_74) = adcx r15_73 r11_62 cf_72
    (of_75, r10_75) = adox r10_60 r11_62 of_73
    (cf_76, r10_76) = adcx r10_75 r11_62 cf_74
    (of_77, r11_77) = adox r11_62 r11_62 of_75
    (cf_78, r11_78) = adc r11_77 0 cf_76
    r12_79 = rax_65
    rax_80 = imul rax_65 r8_0
    rbp_81 = 0
    cf_81 = False
    of_81 = False
    (r9_82, rbp_82) = mulx (a @ 0) rdx_71
    (of_83, r13_83) = adox r13_68 rbp_82 of_81
    (cf_84, r14_84) = adcx r14_72 r9_82 cf_81
    (r9_85, rbp_85) = mulx (a @ 1) rdx_71
    (of_86, r14_86) = adox r14_84 rbp_85 of_83
    (cf_87, r15_87) = adcx r15_74 r9_85 cf_84
    (r9_88, rbp_88) = mulx (a @ 2) rdx_71
    (of_89, r15_89) = adox r15_87 rbp_88 of_86
    (cf_90, r10_90) = adcx r10_76 r9_88 cf_87
    (r9_91, rbp_91) = mulx (a @ 3) rdx_71
    rdx_92 = rax_80
    (of_93, r10_93) = adox r10_90 rbp_91 of_89
    (cf_94, r9_94) = adcx r9_91 r11_78 cf_90
    (of_95, r11_95) = adox r11_78 r9_94 of_93
    (rax_96, rbp_96) = mulx (n @ 0) rdx_92
    (cf_97, r12_97) = adcx r12_79 rbp_96 cf_94
    (of_98, rax_98) = adox rax_96 r13_83 of_95
    (r9_99, rbp_99) = mulx (n @ 1) rdx_92
    (cf_100, rax_100) = adcx rax_98 rbp_99 cf_97
    (of_101, r14_101) = adox r14_86 r9_99 of_98
    (r9_102, rbp_102) = mulx (n @ 2) rdx_92
    (cf_103, r14_103) = adcx r14_101 rbp_102 cf_100
    (of_104, r15_104) = adox r15_89 r9_102 of_101
    (r9_105, rbp_105) = mulx (n @ 3) rdx_92
    rdx_106 = rax_100
    (cf_107, r15_107) = adcx r15_104 rbp_105 cf_103
    (of_108, r10_108) = adox r10_93 r9_105 of_104
    (cf_109, r10_109) = adcx r10_108 r12_97 cf_107
    (of_110, r11_110) = adox r11_95 r12_97 of_108
    (cf_111, r11_111) = adcx r11_110 r12_97 cf_109
    (of_112, r12_112) = adox r12_97 r12_97 of_110
    (cf_113, r12_113) = adc r12_112 0 cf_111
    rdx_114 = imul rdx_106 r8_0
    rbp_115 = 0
    cf_115 = False
    of_115 = False
    (r9_116, r13_116) = mulx (n @ 0) rdx_114
    (cf_117, r13_117) = adcx r13_116 rax_100 cf_115
    (of_118, r14_118) = adox r14_103 r9_116 of_115
    (r9_119, rbp_119) = mulx (n @ 1) rdx_114
    (cf_120, r14_120) = adcx r14_118 rbp_119 cf_117
    (of_121, r15_121) = adox r15_107 r9_119 of_118
    (r9_122, rbp_122) = mulx (n @ 2) rdx_114
    (cf_123, r15_123) = adcx r15_121 rbp_122 cf_120
    (of_124, r10_124) = adox r10_109 r9_122 of_121
    (r9_125, rbp_125) = mulx (n @ 3) rdx_114
    rdx_126 = r14_120
    (cf_128, r10_128) = adcx r10_124 rbp_125 cf_123
    (of_129, r11_129) = adox r11_111 r9_125 of_124
    rax_130 = r15_123
    (cf_131, r11_131) = adcx r11_129 r13_117 cf_128
    (of_132, r12_132) = adox r12_113 r13_117 of_129
    (cf_133, r12_133) = adc r12_132 0 cf_131
    rbp_134 = r10_128
    (cf_135, r14_135) = sub r14_120 (n @ 0)
    (cf_136, r15_136) = sbb r15_123 (n @ 1) cf_135
    (cf_137, r10_137) = sbb r10_128 (n @ 2) cf_136
    r9_138 = r11_131
    (cf_139, r11_139) = sbb r11_131 (n @ 3) cf_137
    (cf_140, r12_140) = sbb r12_133 0 cf_139
    r14_141 = cmovb r14_135 rdx_126 cf_140
    r15_142 = cmovb r15_136 rax_130 cf_140
    r10_143 = cmovb r10_137 rbp_134 cf_140
    result0 = r14_141
    r11_145 = cmovb r11_139 r9_138 cf_140
    result1 = r15_142
    result2 = r10_143
    result3 = r11_145
    result = [result0, result1, result2, result3]

__mulx_by_1_mont_256
  : Vec256 // a; pointer in rsi
  -> Vec256 // b; pointer in rbx
  -> [64] // n0; stored in rcx
  -> [6][64] // result
__mulx_by_1_mont_256 a b n0 = result
  where
    [rax_0, r11_0, r12_0, r13_0] = a
    rcx_0 = n0
    r14_1 = rax_0
    rax_2 = imul rax_0 rcx_0
    r10_3 = rax_2
    (rdx_4, rax_4) = mul rax_2 (b @ 0)
    (cf_5, r14_5) = add r14_1 rax_4
    rax_6 = r10_3
    (cf_7, r14_7) = adc r14_5 rdx_4 cf_5
    (rdx_8, rax_8) = mul rax_6 (b @ 1)
    (cf_9, r11_9) = add r11_0 rax_8
    rax_10 = r10_3
    (cf_11, rdx_11) = adc rdx_8 0 cf_9
    (cf_12, r11_12) = add r11_9 r14_7
    (cf_13, rdx_13) = adc rdx_11 0 cf_12
    r14_14 = rdx_13
    (rdx_15, rax_15) = mul rax_10 (b @ 2)
    r15_16 = r11_12
    r11_17 = imul r11_12 rcx_0
    (cf_18, r12_18) = add r12_0 rax_15
    rax_19 = r10_3
    (cf_20, rdx_20) = adc rdx_15 0 cf_18
    (cf_21, r12_21) = add r12_18 r14_14
    (cf_22, rdx_22) = adc rdx_20 0 cf_21
    r14_23 = rdx_22
    (rdx_24, rax_24) = mul rax_19 (b @ 3)
    (cf_25, r13_25) = add r13_0 rax_24
    rax_26 = r11_17
    (cf_27, rdx_27) = adc rdx_24 0 cf_25
    (cf_28, r13_28) = add r13_25 r14_23
    (cf_29, rdx_29) = adc rdx_27 0 cf_28
    r14_30 = rdx_29
    (rdx_31, rax_31) = mul rax_26 (b @ 0)
    (cf_32, r15_32) = add r15_16 rax_31
    rax_33 = r11_17
    (cf_34, r15_34) = adc r15_32 rdx_31 cf_32
    (rdx_35, rax_35) = mul rax_33 (b @ 1)
    (cf_36, r12_36) = add r12_21 rax_35
    rax_37 = r11_17
    (cf_38, rdx_38) = adc rdx_35 0 cf_36
    (cf_39, r12_39) = add r12_36 r15_34
    (cf_40, rdx_40) = adc rdx_38 0 cf_39
    r15_41 = rdx_40
    (rdx_42, rax_42) = mul rax_37 (b @ 2)
    r10_43 = r12_39
    r12_44 = imul r12_39 rcx_0
    (cf_45, r13_45) = add r13_28 rax_42
    rax_46 = r11_17
    (cf_47, rdx_47) = adc rdx_42 0 cf_45
    (cf_48, r13_48) = add r13_45 r15_41
    (cf_49, rdx_49) = adc rdx_47 0 cf_48
    r15_50 = rdx_49
    (rdx_51, rax_51) = mul rax_46 (b @ 3)
    (cf_52, r14_52) = add r14_30 rax_51
    rax_53 = r12_44
    (cf_54, rdx_54) = adc rdx_51 0 cf_52
    (cf_55, r14_55) = add r14_52 r15_50
    (cf_56, rdx_56) = adc rdx_54 0 cf_55
    r15_57 = rdx_56
    (rdx_58, rax_58) = mul rax_53 (b @ 0)
    (cf_59, r10_59) = add r10_43 rax_58
    rax_60 = r12_44
    (cf_61, r10_61) = adc r10_59 rdx_58 cf_59
    (rdx_62, rax_62) = mul rax_60 (b @ 1)
    (cf_63, r13_63) = add r13_48 rax_62
    rax_64 = r12_44
    (cf_65, rdx_65) = adc rdx_62 0 cf_63
    (cf_66, r13_66) = add r13_63 r10_61
    (cf_67, rdx_67) = adc rdx_65 0 cf_66
    r10_68 = rdx_67
    (rdx_69, rax_69) = mul rax_64 (b @ 2)
    r11_70 = r13_66
    r13_71 = imul r13_66 rcx_0
    (cf_72, r14_72) = add r14_55 rax_69
    rax_73 = r12_44
    (cf_74, rdx_74) = adc rdx_69 0 cf_72
    (cf_75, r14_75) = add r14_72 r10_68
    (cf_76, rdx_76) = adc rdx_74 0 cf_75
    r10_77 = rdx_76
    (rdx_78, rax_78) = mul rax_73 (b @ 3)
    (cf_79, r15_79) = add r15_57 rax_78
    rax_80 = r13_71
    (cf_81, rdx_81) = adc rdx_78 0 cf_79
    (cf_82, r15_82) = add r15_79 r10_77
    (cf_83, rdx_83) = adc rdx_81 0 cf_82
    r10_84 = rdx_83
    (rdx_85, rax_85) = mul rax_80 (b @ 0)
    (cf_86, r11_86) = add r11_70 rax_85
    rax_87 = r13_71
    (cf_88, r11_88) = adc r11_86 rdx_85 cf_86
    (rdx_89, rax_89) = mul rax_87 (b @ 1)
    (cf_90, r14_90) = add r14_75 rax_89
    rax_91 = r13_71
    (cf_92, rdx_92) = adc rdx_89 0 cf_90
    (cf_93, r14_93) = add r14_90 r11_88
    (cf_94, rdx_94) = adc rdx_92 0 cf_93
    r11_95 = rdx_94
    (rdx_96, rax_96) = mul rax_91 (b @ 2)
    (cf_97, r15_97) = add r15_82 rax_96
    rax_98 = r13_71
    (cf_99, rdx_99) = adc rdx_96 0 cf_97
    (cf_100, r15_100) = add r15_97 r11_95
    (cf_101, rdx_101) = adc rdx_99 0 cf_100
    r11_102 = rdx_101
    (rdx_103, rax_103) = mul rax_98 (b @ 3)
    (cf_104, r10_104) = add r10_84 rax_103
    rax_105 = r14_93
    (cf_106, rdx_106) = adc rdx_103 0 cf_104
    (cf_107, r10_107) = add r10_104 r11_102
    (cf_108, rdx_108) = adc rdx_106 0 cf_107
    r11_109 = rdx_108
    result = [r10_107, r11_109, r12_44, r13_71, r14_93, r15_100]